{"ast":null,"code":"var _jsxFileName = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.component.stories.js\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\n            \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}/>\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} /> \\\\n\\\\nexport const Alert = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n                            handleClick={action('Alert button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const outlined = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n                            handleClick={action('outlined button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Link = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n                            handleClick={action('Link button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endLoc\\\":{\\\"col\\\":324,\\\"line\\\":20},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endBody\\\":{\\\"col\\\":324,\\\"line\\\":20}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":27},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":27}},\\\"button--alert\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":38},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":38}},\\\"button--outlined\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":49},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":49}},\\\"button--link\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":60},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":60}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\n            \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}/>\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} /> \\\\n\\\\nexport const Alert = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n                            handleClick={action('Alert button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const outlined = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n                            handleClick={action('outlined button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Link = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n                            handleClick={action('Link button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\",\\\"locationsMap\\\":{\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endLoc\\\":{\\\"col\\\":324,\\\"line\\\":20},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endBody\\\":{\\\"col\\\":324,\\\"line\\\":20}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":27},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":27}},\\\"button--alert\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":38},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":38}},\\\"button--outlined\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":49},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":49}},\\\"button--link\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":60},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":60}}}},\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n            \\n\\nexport const Long = addSourceDecorator(() => <Button disabled={boolean(\\\"Disabled\\\", false)} fullWidth={boolean(\\\"fullWidth\\\", false)} disableRipple={boolean(\\\"disableRipple\\\", false)}type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",\\\"Long\\\")}/>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const Short = addSourceDecorator(() => <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}); \\n\\nexport const Alert = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const outlined = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const Link = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"button--long\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 42\n    },\n    \"endLoc\": {\n      \"col\": 481,\n      \"line\": 42\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 42\n    },\n    \"endBody\": {\n      \"col\": 481,\n      \"line\": 42\n    }\n  },\n  \"button--short\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 43\n    },\n    \"endLoc\": {\n      \"col\": 203,\n      \"line\": 49\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 43\n    },\n    \"endBody\": {\n      \"col\": 203,\n      \"line\": 49\n    }\n  },\n  \"button--alert\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 51\n    },\n    \"endLoc\": {\n      \"col\": 171,\n      \"line\": 60\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 51\n    },\n    \"endBody\": {\n      \"col\": 171,\n      \"line\": 60\n    }\n  },\n  \"button--outlined\": {\n    \"startLoc\": {\n      \"col\": 24,\n      \"line\": 62\n    },\n    \"endLoc\": {\n      \"col\": 171,\n      \"line\": 71\n    },\n    \"startBody\": {\n      \"col\": 24,\n      \"line\": 62\n    },\n    \"endBody\": {\n      \"col\": 171,\n      \"line\": 71\n    }\n  },\n  \"button--link\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 73\n    },\n    \"endLoc\": {\n      \"col\": 171,\n      \"line\": 82\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 73\n    },\n    \"endBody\": {\n      \"col\": 171,\n      \"line\": 82\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n            \\n\\nexport const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} fullWidth={boolean(\\\"fullWidth\\\", false)} disableRipple={boolean(\\\"disableRipple\\\", false)}type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",\\\"Long\\\")}/>\\nexport const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} /> \\n\\nexport const Alert = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const outlined = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Link = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"button--long\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 20\n    },\n    \"endLoc\": {\n      \"col\": 324,\n      \"line\": 20\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 20\n    },\n    \"endBody\": {\n      \"col\": 324,\n      \"line\": 20\n    }\n  },\n  \"button--short\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 21\n    },\n    \"endLoc\": {\n      \"col\": 65,\n      \"line\": 27\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 21\n    },\n    \"endBody\": {\n      \"col\": 65,\n      \"line\": 27\n    }\n  },\n  \"button--alert\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 29\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 38\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 29\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 38\n    }\n  },\n  \"button--outlined\": {\n    \"startLoc\": {\n      \"col\": 24,\n      \"line\": 40\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 49\n    },\n    \"startBody\": {\n      \"col\": 24,\n      \"line\": 40\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 49\n    }\n  },\n  \"button--link\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 51\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 60\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 51\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 60\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\nexport default {\n  title: 'Button',\n  parameters: {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\n            \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}/>\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} /> \\\\n\\\\nexport const Alert = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n                            handleClick={action('Alert button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const outlined = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n                            handleClick={action('outlined button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Link = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n                            handleClick={action('Link button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endLoc\\\":{\\\"col\\\":324,\\\"line\\\":20},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endBody\\\":{\\\"col\\\":324,\\\"line\\\":20}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":27},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":27}},\\\"button--alert\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":38},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":38}},\\\"button--outlined\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":49},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":49}},\\\"button--link\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":60},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":60}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\n            \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}/>\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} /> \\\\n\\\\nexport const Alert = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n                            handleClick={action('Alert button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const outlined = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n                            handleClick={action('outlined button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Link = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n                            handleClick={action('Link button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\",\\\"locationsMap\\\":{\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endLoc\\\":{\\\"col\\\":324,\\\"line\\\":20},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endBody\\\":{\\\"col\\\":324,\\\"line\\\":20}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":27},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":27}},\\\"button--alert\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":38},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":38}},\\\"button--outlined\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":49},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":49}},\\\"button--link\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":60},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":60}}}},\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n            \\n\\nexport const Long = addSourceDecorator(() => <Button disabled={boolean(\\\"Disabled\\\", false)} fullWidth={boolean(\\\"fullWidth\\\", false)} disableRipple={boolean(\\\"disableRipple\\\", false)}type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",\\\"Long\\\")}/>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const Short = addSourceDecorator(() => <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}); \\n\\nexport const Alert = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const outlined = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const Link = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \",\n      \"locationsMap\": {\n        \"button--long\": {\n          \"startLoc\": {\n            \"col\": 20,\n            \"line\": 42\n          },\n          \"endLoc\": {\n            \"col\": 481,\n            \"line\": 42\n          },\n          \"startBody\": {\n            \"col\": 20,\n            \"line\": 42\n          },\n          \"endBody\": {\n            \"col\": 481,\n            \"line\": 42\n          }\n        },\n        \"button--short\": {\n          \"startLoc\": {\n            \"col\": 21,\n            \"line\": 43\n          },\n          \"endLoc\": {\n            \"col\": 203,\n            \"line\": 49\n          },\n          \"startBody\": {\n            \"col\": 21,\n            \"line\": 43\n          },\n          \"endBody\": {\n            \"col\": 203,\n            \"line\": 49\n          }\n        },\n        \"button--alert\": {\n          \"startLoc\": {\n            \"col\": 21,\n            \"line\": 51\n          },\n          \"endLoc\": {\n            \"col\": 171,\n            \"line\": 60\n          },\n          \"startBody\": {\n            \"col\": 21,\n            \"line\": 51\n          },\n          \"endBody\": {\n            \"col\": 171,\n            \"line\": 60\n          }\n        },\n        \"button--outlined\": {\n          \"startLoc\": {\n            \"col\": 24,\n            \"line\": 62\n          },\n          \"endLoc\": {\n            \"col\": 171,\n            \"line\": 71\n          },\n          \"startBody\": {\n            \"col\": 24,\n            \"line\": 62\n          },\n          \"endBody\": {\n            \"col\": 171,\n            \"line\": 71\n          }\n        },\n        \"button--link\": {\n          \"startLoc\": {\n            \"col\": 20,\n            \"line\": 73\n          },\n          \"endLoc\": {\n            \"col\": 171,\n            \"line\": 82\n          },\n          \"startBody\": {\n            \"col\": 20,\n            \"line\": 73\n          },\n          \"endBody\": {\n            \"col\": 171,\n            \"line\": 82\n          }\n        }\n      }\n    },\n    \"storySource\": {\n      \"source\": \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n            \\n\\nexport const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} fullWidth={boolean(\\\"fullWidth\\\", false)} disableRipple={boolean(\\\"disableRipple\\\", false)}type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",\\\"Long\\\")}/>\\nexport const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} /> \\n\\nexport const Alert = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const outlined = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Link = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \",\n      \"locationsMap\": {\n        \"button--long\": {\n          \"startLoc\": {\n            \"col\": 20,\n            \"line\": 20\n          },\n          \"endLoc\": {\n            \"col\": 324,\n            \"line\": 20\n          },\n          \"startBody\": {\n            \"col\": 20,\n            \"line\": 20\n          },\n          \"endBody\": {\n            \"col\": 324,\n            \"line\": 20\n          }\n        },\n        \"button--short\": {\n          \"startLoc\": {\n            \"col\": 21,\n            \"line\": 21\n          },\n          \"endLoc\": {\n            \"col\": 65,\n            \"line\": 27\n          },\n          \"startBody\": {\n            \"col\": 21,\n            \"line\": 21\n          },\n          \"endBody\": {\n            \"col\": 65,\n            \"line\": 27\n          }\n        },\n        \"button--alert\": {\n          \"startLoc\": {\n            \"col\": 21,\n            \"line\": 29\n          },\n          \"endLoc\": {\n            \"col\": 33,\n            \"line\": 38\n          },\n          \"startBody\": {\n            \"col\": 21,\n            \"line\": 29\n          },\n          \"endBody\": {\n            \"col\": 33,\n            \"line\": 38\n          }\n        },\n        \"button--outlined\": {\n          \"startLoc\": {\n            \"col\": 24,\n            \"line\": 40\n          },\n          \"endLoc\": {\n            \"col\": 33,\n            \"line\": 49\n          },\n          \"startBody\": {\n            \"col\": 24,\n            \"line\": 40\n          },\n          \"endBody\": {\n            \"col\": 33,\n            \"line\": 49\n          }\n        },\n        \"button--link\": {\n          \"startLoc\": {\n            \"col\": 20,\n            \"line\": 51\n          },\n          \"endLoc\": {\n            \"col\": 33,\n            \"line\": 60\n          },\n          \"startBody\": {\n            \"col\": 20,\n            \"line\": 51\n          },\n          \"endBody\": {\n            \"col\": 33,\n            \"line\": 60\n          }\n        }\n      }\n    },\n    componentSubtitle: 'Documentation of the Button React component'\n  },\n  component: Button,\n  decorators: [withKnobs],\n  excludeStories: /.*Data$/\n};\nexport const Long = addSourceDecorator(addSourceDecorator(() => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", false),\n  type: text(\"Type\", 'long'),\n  handleClick: action('onClick'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Long\"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n});\n;\nexport const Short = addSourceDecorator(addSourceDecorator(() => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"short\"),\n  handleClick: action('Short button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Short\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n});\n;\nexport const Alert = addSourceDecorator(addSourceDecorator(() => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"alert\"),\n  handleClick: action('Alert button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Alert\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n});\n;\nexport const outlined = addSourceDecorator(addSourceDecorator(() => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"outlined\"),\n  handleClick: action('outlined button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Outlined\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n});\n;\nexport const Link = addSourceDecorator(addSourceDecorator(() => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"link\"),\n  handleClick: action('Link button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Link\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n}); // export const Delete = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"delete\")}\n//                             handleClick={action('Delete button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Delete\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n// export const Line = () => <Button \n//                         disabled={boolean(\"Disabled\", false)}\n//                         type={text(\"Type\", \"line\")}\n//                         handleClick={action('Line button clicked')}\n//                         handleInputFocus={action('onFocus')}\n//                         handleInputBlur={action('onBlur')}\n//                         btnText={text(\"label\",\"Line\")}\n//                         fullWidth={boolean(\"fullWidth\", false)}\n//                         disableRipple={boolean(\"disableRipple\", true)}>\n//                     </Button>   \n// export const Icon = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"icon\")}\n//                             handleClick={action('Icon button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Icon\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>","map":{"version":3,"sources":["/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.component.stories.js"],"names":["withSourceLoader","require","withSource","addSourceDecorator","addSource","__SOURCE_PREFIX__","__STORY__","__ADDS_MAP__","__MAIN_FILE_LOCATION__","__MODULE_DEPENDENCIES__","__LOCAL_DEPENDENCIES__","__IDS_TO_FRAMEWORKS__","React","storiesOf","action","Button","withKnobs","text","boolean","title","parameters","componentSubtitle","component","decorators","excludeStories","Long","Short","Alert","outlined","Link"],"mappings":"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","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\n            \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}/>\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} /> \\\\n\\\\nexport const Alert = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n                            handleClick={action('Alert button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const outlined = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n                            handleClick={action('outlined button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Link = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n                            handleClick={action('Link button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endLoc\\\":{\\\"col\\\":324,\\\"line\\\":20},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endBody\\\":{\\\"col\\\":324,\\\"line\\\":20}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":27},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":27}},\\\"button--alert\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":38},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":38}},\\\"button--outlined\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":49},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":49}},\\\"button--link\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":60},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":60}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\n            \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}/>\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} /> \\\\n\\\\nexport const Alert = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n                            handleClick={action('Alert button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const outlined = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n                            handleClick={action('outlined button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Link = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n                            handleClick={action('Link button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\",\\\"locationsMap\\\":{\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endLoc\\\":{\\\"col\\\":324,\\\"line\\\":20},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endBody\\\":{\\\"col\\\":324,\\\"line\\\":20}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":27},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":27}},\\\"button--alert\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":38},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":38}},\\\"button--outlined\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":49},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":49}},\\\"button--link\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":60},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":60}}}},\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n            \\n\\nexport const Long = addSourceDecorator(() => <Button disabled={boolean(\\\"Disabled\\\", false)} fullWidth={boolean(\\\"fullWidth\\\", false)} disableRipple={boolean(\\\"disableRipple\\\", false)}type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",\\\"Long\\\")}/>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const Short = addSourceDecorator(() => <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}); \\n\\nexport const Alert = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const outlined = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const Link = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"button--long\":{\"startLoc\":{\"col\":20,\"line\":42},\"endLoc\":{\"col\":481,\"line\":42},\"startBody\":{\"col\":20,\"line\":42},\"endBody\":{\"col\":481,\"line\":42}},\"button--short\":{\"startLoc\":{\"col\":21,\"line\":43},\"endLoc\":{\"col\":203,\"line\":49},\"startBody\":{\"col\":21,\"line\":43},\"endBody\":{\"col\":203,\"line\":49}},\"button--alert\":{\"startLoc\":{\"col\":21,\"line\":51},\"endLoc\":{\"col\":171,\"line\":60},\"startBody\":{\"col\":21,\"line\":51},\"endBody\":{\"col\":171,\"line\":60}},\"button--outlined\":{\"startLoc\":{\"col\":24,\"line\":62},\"endLoc\":{\"col\":171,\"line\":71},\"startBody\":{\"col\":24,\"line\":62},\"endBody\":{\"col\":171,\"line\":71}},\"button--link\":{\"startLoc\":{\"col\":20,\"line\":73},\"endLoc\":{\"col\":171,\"line\":82},\"startBody\":{\"col\":20,\"line\":73},\"endBody\":{\"col\":171,\"line\":82}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n            \\n\\nexport const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} fullWidth={boolean(\\\"fullWidth\\\", false)} disableRipple={boolean(\\\"disableRipple\\\", false)}type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",\\\"Long\\\")}/>\\nexport const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} /> \\n\\nexport const Alert = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const outlined = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Link = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"button--long\":{\"startLoc\":{\"col\":20,\"line\":20},\"endLoc\":{\"col\":324,\"line\":20},\"startBody\":{\"col\":20,\"line\":20},\"endBody\":{\"col\":324,\"line\":20}},\"button--short\":{\"startLoc\":{\"col\":21,\"line\":21},\"endLoc\":{\"col\":65,\"line\":27},\"startBody\":{\"col\":21,\"line\":21},\"endBody\":{\"col\":65,\"line\":27}},\"button--alert\":{\"startLoc\":{\"col\":21,\"line\":29},\"endLoc\":{\"col\":33,\"line\":38},\"startBody\":{\"col\":21,\"line\":29},\"endBody\":{\"col\":33,\"line\":38}},\"button--outlined\":{\"startLoc\":{\"col\":24,\"line\":40},\"endLoc\":{\"col\":33,\"line\":49},\"startBody\":{\"col\":24,\"line\":40},\"endBody\":{\"col\":33,\"line\":49}},\"button--link\":{\"startLoc\":{\"col\":20,\"line\":51},\"endLoc\":{\"col\":33,\"line\":60},\"startBody\":{\"col\":20,\"line\":51},\"endBody\":{\"col\":33,\"line\":60}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\n\n\nexport default {\n  title: 'Button',\n  parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\n            \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}/>\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} /> \\\\n\\\\nexport const Alert = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n                            handleClick={action('Alert button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const outlined = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n                            handleClick={action('outlined button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Link = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n                            handleClick={action('Link button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endLoc\\\":{\\\"col\\\":324,\\\"line\\\":20},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endBody\\\":{\\\"col\\\":324,\\\"line\\\":20}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":27},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":27}},\\\"button--alert\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":38},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":38}},\\\"button--outlined\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":49},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":49}},\\\"button--link\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":60},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":60}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\n            \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}/>\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} /> \\\\n\\\\nexport const Alert = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n                            handleClick={action('Alert button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const outlined = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n                            handleClick={action('outlined button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Link = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n                            handleClick={action('Link button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\",\\\"locationsMap\\\":{\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endLoc\\\":{\\\"col\\\":324,\\\"line\\\":20},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":20},\\\"endBody\\\":{\\\"col\\\":324,\\\"line\\\":20}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":27},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":21},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":27}},\\\"button--alert\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":38},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":29},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":38}},\\\"button--outlined\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":49},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":40},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":49}},\\\"button--link\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":60},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":51},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":60}}}},\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n            \\n\\nexport const Long = addSourceDecorator(() => <Button disabled={boolean(\\\"Disabled\\\", false)} fullWidth={boolean(\\\"fullWidth\\\", false)} disableRipple={boolean(\\\"disableRipple\\\", false)}type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",\\\"Long\\\")}/>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const Short = addSourceDecorator(() => <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}); \\n\\nexport const Alert = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const outlined = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const Link = addSourceDecorator(() => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \",\"locationsMap\":{\"button--long\":{\"startLoc\":{\"col\":20,\"line\":42},\"endLoc\":{\"col\":481,\"line\":42},\"startBody\":{\"col\":20,\"line\":42},\"endBody\":{\"col\":481,\"line\":42}},\"button--short\":{\"startLoc\":{\"col\":21,\"line\":43},\"endLoc\":{\"col\":203,\"line\":49},\"startBody\":{\"col\":21,\"line\":43},\"endBody\":{\"col\":203,\"line\":49}},\"button--alert\":{\"startLoc\":{\"col\":21,\"line\":51},\"endLoc\":{\"col\":171,\"line\":60},\"startBody\":{\"col\":21,\"line\":51},\"endBody\":{\"col\":171,\"line\":60}},\"button--outlined\":{\"startLoc\":{\"col\":24,\"line\":62},\"endLoc\":{\"col\":171,\"line\":71},\"startBody\":{\"col\":24,\"line\":62},\"endBody\":{\"col\":171,\"line\":71}},\"button--link\":{\"startLoc\":{\"col\":20,\"line\":73},\"endLoc\":{\"col\":171,\"line\":82},\"startBody\":{\"col\":20,\"line\":73},\"endBody\":{\"col\":171,\"line\":82}}}},\"storySource\":{\"source\":\"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n            \\n\\nexport const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} fullWidth={boolean(\\\"fullWidth\\\", false)} disableRipple={boolean(\\\"disableRipple\\\", false)}type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",\\\"Long\\\")}/>\\nexport const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} /> \\n\\nexport const Alert = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const outlined = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Link = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \",\"locationsMap\":{\"button--long\":{\"startLoc\":{\"col\":20,\"line\":20},\"endLoc\":{\"col\":324,\"line\":20},\"startBody\":{\"col\":20,\"line\":20},\"endBody\":{\"col\":324,\"line\":20}},\"button--short\":{\"startLoc\":{\"col\":21,\"line\":21},\"endLoc\":{\"col\":65,\"line\":27},\"startBody\":{\"col\":21,\"line\":21},\"endBody\":{\"col\":65,\"line\":27}},\"button--alert\":{\"startLoc\":{\"col\":21,\"line\":29},\"endLoc\":{\"col\":33,\"line\":38},\"startBody\":{\"col\":21,\"line\":29},\"endBody\":{\"col\":33,\"line\":38}},\"button--outlined\":{\"startLoc\":{\"col\":24,\"line\":40},\"endLoc\":{\"col\":33,\"line\":49},\"startBody\":{\"col\":24,\"line\":40},\"endBody\":{\"col\":33,\"line\":49}},\"button--link\":{\"startLoc\":{\"col\":20,\"line\":51},\"endLoc\":{\"col\":33,\"line\":60},\"startBody\":{\"col\":20,\"line\":51},\"endBody\":{\"col\":33,\"line\":60}}}},\n    componentSubtitle: 'Documentation of the Button React component',\n  },\n  component: Button,\n  decorators: [withKnobs],\n  excludeStories: /.*Data$/,\n  \n};\n            \n\nexport const Long = addSourceDecorator(addSourceDecorator(() => <Button disabled={boolean(\"Disabled\", false)} fullWidth={boolean(\"fullWidth\", false)} disableRipple={boolean(\"disableRipple\", false)}type={text(\"Type\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\"label\",\"Long\")}/>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\nexport const Short = addSourceDecorator(addSourceDecorator(() => <Button  disabled={boolean(\"Disabled\", false)} type={text(\"Type\", \"short\")}\n                handleClick={action('Short button clicked')}\n                handleInputFocus={action('onFocus')}\n                handleInputBlur={action('onBlur')}\n                btnText={text(\"label\",\"Short\")}\n                fullWidth={boolean(\"fullWidth\", false)}\n                disableRipple={boolean(\"disableRipple\", true)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});; \n\nexport const Alert = addSourceDecorator(addSourceDecorator(() => <Button \n                            disabled={boolean(\"Disabled\", false)}\n                            type={text(\"Type\", \"alert\")}\n                            handleClick={action('Alert button clicked')}\n                            handleInputFocus={action('onFocus')}\n                            handleInputBlur={action('onBlur')}\n                            btnText={text(\"label\",\"Alert\")}\n                            fullWidth={boolean(\"fullWidth\", false)}\n                            disableRipple={boolean(\"disableRipple\", true)}>\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const outlined = addSourceDecorator(addSourceDecorator(() => <Button \n                            disabled={boolean(\"Disabled\", false)}\n                            type={text(\"Type\", \"outlined\")}\n                            handleClick={action('outlined button clicked')}\n                            handleInputFocus={action('onFocus')}\n                            handleInputBlur={action('onBlur')}\n                            btnText={text(\"label\",\"Outlined\")}\n                            fullWidth={boolean(\"fullWidth\", false)}\n                            disableRipple={boolean(\"disableRipple\", true)}>\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const Link = addSourceDecorator(addSourceDecorator(() => <Button \n                            disabled={boolean(\"Disabled\", false)}\n                            type={text(\"Type\", \"link\")}\n                            handleClick={action('Link button clicked')}\n                            handleInputFocus={action('onFocus')}\n                            handleInputBlur={action('onBlur')}\n                            btnText={text(\"label\",\"Link\")}\n                            fullWidth={boolean(\"fullWidth\", false)}\n                            disableRipple={boolean(\"disableRipple\", true)}>\n                        </Button>, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n// export const Delete = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"delete\")}\n//                             handleClick={action('Delete button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Delete\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n                        \n// export const Line = () => <Button \n//                         disabled={boolean(\"Disabled\", false)}\n//                         type={text(\"Type\", \"line\")}\n//                         handleClick={action('Line button clicked')}\n//                         handleInputFocus={action('onFocus')}\n//                         handleInputBlur={action('onBlur')}\n//                         btnText={text(\"label\",\"Line\")}\n//                         fullWidth={boolean(\"fullWidth\", false)}\n//                         disableRipple={boolean(\"disableRipple\", true)}>\n//                     </Button>   \n\n// export const Icon = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"icon\")}\n//                             handleClick={action('Icon button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Icon\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>                      "]},"metadata":{},"sourceType":"module"}