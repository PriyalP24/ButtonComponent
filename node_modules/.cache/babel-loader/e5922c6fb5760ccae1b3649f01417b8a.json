{"ast":null,"code":"var _jsxFileName = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.component.stories.js\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\n\\\\nexport default {\\\\n  component: Button,\\\\n  title: 'Button',\\\\n  componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/\\\\n};\\\\n\\\\nstoriesOf('Button', module).addParameters({ component: Badge });\\\\n\\\\n\\\\nexport const Default = () => (\\\\n              <Button \\\\n                disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", 'default')}\\\\n                handleClick={action('onClick')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n              </Button>\\\\n);\\\\n\\\\nexport const Long = () => (\\\\n              <Button \\\\n                disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n                handleClick={action('onClick')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n            </Button>\\\\n);\\\\n\\\\nexport const Short = () => (\\\\n                        <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                            handleClick={action('Short button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n);\\\\n  \\\\n\\\\nexport const Alert = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n                            handleClick={action('Alert button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const outlined = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n                            handleClick={action('outlined button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Link = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n                            handleClick={action('Link button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Delete = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n                            handleClick={action('Delete button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n                        \\\\nexport const Line = () => <Button \\\\n                        disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                        type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n                        handleClick={action('Line button clicked')}\\\\n                        handleInputFocus={action('onFocus')}\\\\n                        handleInputBlur={action('onBlur')}\\\\n                        btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n                        fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                        disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                    </Button>   \\\\n                    \\\\nexport const Icon = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n                            handleClick={action('Icon button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":19},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":30},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":19},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":30}},\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":32},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":43},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":32},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":43}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":45},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":56},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":45},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":56}},\\\"button--alert\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":59},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":68},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":59},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":68}},\\\"button--outlined\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":70},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":79},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":70},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":79}},\\\"button--link\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":81},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":90},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":81},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":90}},\\\"button--delete\\\":{\\\"startLoc\\\":{\\\"col\\\":22,\\\"line\\\":92},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":101},\\\"startBody\\\":{\\\"col\\\":22,\\\"line\\\":92},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":101}},\\\"button--line\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":103},\\\"endLoc\\\":{\\\"col\\\":29,\\\"line\\\":112},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":103},\\\"endBody\\\":{\\\"col\\\":29,\\\"line\\\":112}},\\\"button--icon\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":114},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":123},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":114},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":123}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  component: Button,\\n  title: 'Button',\\n  componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/\\n};\\n\\nstoriesOf('Button', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).addParameters({ component: Badge });\\n\\n\\nexport const Default = () => (\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'default')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Default\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n              </Button>\\n);\\n\\nexport const Long = () => (\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'long')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Default\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n            </Button>\\n);\\n\\nexport const Short = () => (\\n                        <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"short\\\")}\\n                            handleClick={action('Short button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n);\\n  \\n\\nexport const Alert = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const outlined = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Link = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Delete = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"delete\\\")}\\n                            handleClick={action('Delete button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n                        \\nexport const Line = () => <Button \\n                        disabled={boolean(\\\"Disabled\\\", false)}\\n                        type={text(\\\"Type\\\", \\\"line\\\")}\\n                        handleClick={action('Line button clicked')}\\n                        handleInputFocus={action('onFocus')}\\n                        handleInputBlur={action('onBlur')}\\n                        btnText={text(\\\"label\\\",\\\"Line\\\")}\\n                        fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                        disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                    </Button>   \\n                    \\nexport const Icon = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"icon\\\")}\\n                            handleClick={action('Icon button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>                      \"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"button--default\": {\n    \"startLoc\": {\n      \"col\": 23,\n      \"line\": 41\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 52\n    },\n    \"startBody\": {\n      \"col\": 23,\n      \"line\": 41\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 52\n    }\n  },\n  \"button--long\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 54\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 65\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 54\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 65\n    }\n  },\n  \"button--short\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 67\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 78\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 67\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 78\n    }\n  },\n  \"button--alert\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 81\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 90\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 81\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 90\n    }\n  },\n  \"button--outlined\": {\n    \"startLoc\": {\n      \"col\": 24,\n      \"line\": 92\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 101\n    },\n    \"startBody\": {\n      \"col\": 24,\n      \"line\": 92\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 101\n    }\n  },\n  \"button--link\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 103\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 112\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 103\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 112\n    }\n  },\n  \"button--delete\": {\n    \"startLoc\": {\n      \"col\": 22,\n      \"line\": 114\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 123\n    },\n    \"startBody\": {\n      \"col\": 22,\n      \"line\": 114\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 123\n    }\n  },\n  \"button--line\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 125\n    },\n    \"endLoc\": {\n      \"col\": 29,\n      \"line\": 134\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 125\n    },\n    \"endBody\": {\n      \"col\": 29,\n      \"line\": 134\n    }\n  },\n  \"button--icon\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 136\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 145\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 136\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 145\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  component: Button,\\n  title: 'Button',\\n  componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/\\n};\\n\\nstoriesOf('Button', module).addParameters({ component: Badge });\\n\\n\\nexport const Default = () => (\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'default')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Default\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n              </Button>\\n);\\n\\nexport const Long = () => (\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'long')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Default\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n            </Button>\\n);\\n\\nexport const Short = () => (\\n                        <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"short\\\")}\\n                            handleClick={action('Short button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n);\\n  \\n\\nexport const Alert = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const outlined = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Link = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Delete = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"delete\\\")}\\n                            handleClick={action('Delete button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n                        \\nexport const Line = () => <Button \\n                        disabled={boolean(\\\"Disabled\\\", false)}\\n                        type={text(\\\"Type\\\", \\\"line\\\")}\\n                        handleClick={action('Line button clicked')}\\n                        handleInputFocus={action('onFocus')}\\n                        handleInputBlur={action('onBlur')}\\n                        btnText={text(\\\"label\\\",\\\"Line\\\")}\\n                        fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                        disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                    </Button>   \\n                    \\nexport const Icon = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"icon\\\")}\\n                            handleClick={action('Icon button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>                      \"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"button--default\": {\n    \"startLoc\": {\n      \"col\": 23,\n      \"line\": 19\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 30\n    },\n    \"startBody\": {\n      \"col\": 23,\n      \"line\": 19\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 30\n    }\n  },\n  \"button--long\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 32\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 43\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 32\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 43\n    }\n  },\n  \"button--short\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 45\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 56\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 45\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 56\n    }\n  },\n  \"button--alert\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 59\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 68\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 59\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 68\n    }\n  },\n  \"button--outlined\": {\n    \"startLoc\": {\n      \"col\": 24,\n      \"line\": 70\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 79\n    },\n    \"startBody\": {\n      \"col\": 24,\n      \"line\": 70\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 79\n    }\n  },\n  \"button--link\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 81\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 90\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 81\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 90\n    }\n  },\n  \"button--delete\": {\n    \"startLoc\": {\n      \"col\": 22,\n      \"line\": 92\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 101\n    },\n    \"startBody\": {\n      \"col\": 22,\n      \"line\": 92\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 101\n    }\n  },\n  \"button--line\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 103\n    },\n    \"endLoc\": {\n      \"col\": 29,\n      \"line\": 112\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 103\n    },\n    \"endBody\": {\n      \"col\": 29,\n      \"line\": 112\n    }\n  },\n  \"button--icon\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 114\n    },\n    \"endLoc\": {\n      \"col\": 33,\n      \"line\": 123\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 114\n    },\n    \"endBody\": {\n      \"col\": 33,\n      \"line\": 123\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\nexport default {\n  component: Button,\n  title: 'Button',\n  componentSubtitle: 'Documentation of the Button React component',\n  decorators: [withKnobs],\n  excludeStories: /.*Data$/\n};\nstoriesOf('Button', module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __ADDS_MAP__\n  }\n}).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__, __MAIN_FILE_LOCATION__, __MODULE_DEPENDENCIES__, __LOCAL_DEPENDENCIES__, __SOURCE_PREFIX__, __IDS_TO_FRAMEWORKS__)).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __ADDS_MAP__\n  }\n}).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__, __MAIN_FILE_LOCATION__, __MODULE_DEPENDENCIES__, __LOCAL_DEPENDENCIES__, __SOURCE_PREFIX__, __IDS_TO_FRAMEWORKS__)).addParameters({\n  component: Badge\n});\nexport const Default = () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", 'default'),\n  handleClick: action('onClick'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Default\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", false),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n});\nDefault.displayName = \"Default\";\nexport const Long = () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", 'long'),\n  handleClick: action('onClick'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Default\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", false),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n});\nLong.displayName = \"Long\";\nexport const Short = () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"short\"),\n  handleClick: action('Short button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Short\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n});\nShort.displayName = \"Short\";\nexport const Alert = () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"alert\"),\n  handleClick: action('Alert button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Alert\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n});\nAlert.displayName = \"Alert\";\nexport const outlined = () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"outlined\"),\n  handleClick: action('outlined button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Outlined\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n});\noutlined.displayName = \"outlined\";\nexport const Link = () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"link\"),\n  handleClick: action('Link button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Link\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125\n  },\n  __self: this\n});\nLink.displayName = \"Link\";\nexport const Delete = () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"delete\"),\n  handleClick: action('Delete button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Delete\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n});\nDelete.displayName = \"Delete\";\nexport const Line = () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"line\"),\n  handleClick: action('Line button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Line\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n});\nLine.displayName = \"Line\";\nexport const Icon = () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"icon\"),\n  handleClick: action('Icon button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Icon\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n});\nIcon.displayName = \"Icon\";\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/js/components/button.component.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src/js/components/button.component.stories.js\"\n  };\n}\n\nLong.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Long\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/js/components/button.component.stories.js\"] = {\n    name: \"Long\",\n    docgenInfo: Long.__docgenInfo,\n    path: \"src/js/components/button.component.stories.js\"\n  };\n}\n\nShort.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Short\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/js/components/button.component.stories.js\"] = {\n    name: \"Short\",\n    docgenInfo: Short.__docgenInfo,\n    path: \"src/js/components/button.component.stories.js\"\n  };\n}\n\nAlert.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Alert\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/js/components/button.component.stories.js\"] = {\n    name: \"Alert\",\n    docgenInfo: Alert.__docgenInfo,\n    path: \"src/js/components/button.component.stories.js\"\n  };\n}\n\noutlined.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"outlined\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/js/components/button.component.stories.js\"] = {\n    name: \"outlined\",\n    docgenInfo: outlined.__docgenInfo,\n    path: \"src/js/components/button.component.stories.js\"\n  };\n}\n\nLink.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Link\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/js/components/button.component.stories.js\"] = {\n    name: \"Link\",\n    docgenInfo: Link.__docgenInfo,\n    path: \"src/js/components/button.component.stories.js\"\n  };\n}\n\nDelete.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Delete\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/js/components/button.component.stories.js\"] = {\n    name: \"Delete\",\n    docgenInfo: Delete.__docgenInfo,\n    path: \"src/js/components/button.component.stories.js\"\n  };\n}\n\nLine.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Line\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/js/components/button.component.stories.js\"] = {\n    name: \"Line\",\n    docgenInfo: Line.__docgenInfo,\n    path: \"src/js/components/button.component.stories.js\"\n  };\n}\n\nIcon.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Icon\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/js/components/button.component.stories.js\"] = {\n    name: \"Icon\",\n    docgenInfo: Icon.__docgenInfo,\n    path: \"src/js/components/button.component.stories.js\"\n  };\n}","map":{"version":3,"sources":["/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.component.stories.js"],"names":["withSourceLoader","require","withSource","addSourceDecorator","addSource","__SOURCE_PREFIX__","__STORY__","__ADDS_MAP__","__MAIN_FILE_LOCATION__","__MODULE_DEPENDENCIES__","__LOCAL_DEPENDENCIES__","__IDS_TO_FRAMEWORKS__","React","storiesOf","action","Button","withKnobs","text","boolean","component","title","componentSubtitle","decorators","excludeStories","module","addParameters","storySource","source","locationsMap","addDecorator","Badge","Default","Long","Short","Alert","outlined","Link","Delete","Line","Icon"],"mappings":"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","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\n\\\\nexport default {\\\\n  component: Button,\\\\n  title: 'Button',\\\\n  componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/\\\\n};\\\\n\\\\nstoriesOf('Button', module).addParameters({ component: Badge });\\\\n\\\\n\\\\nexport const Default = () => (\\\\n              <Button \\\\n                disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", 'default')}\\\\n                handleClick={action('onClick')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n              </Button>\\\\n);\\\\n\\\\nexport const Long = () => (\\\\n              <Button \\\\n                disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n                handleClick={action('onClick')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n            </Button>\\\\n);\\\\n\\\\nexport const Short = () => (\\\\n                        <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                            handleClick={action('Short button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n);\\\\n  \\\\n\\\\nexport const Alert = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n                            handleClick={action('Alert button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const outlined = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n                            handleClick={action('outlined button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Link = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n                            handleClick={action('Link button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n\\\\nexport const Delete = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n                            handleClick={action('Delete button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>\\\\n                        \\\\nexport const Line = () => <Button \\\\n                        disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                        type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n                        handleClick={action('Line button clicked')}\\\\n                        handleInputFocus={action('onFocus')}\\\\n                        handleInputBlur={action('onBlur')}\\\\n                        btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n                        fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                        disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                    </Button>   \\\\n                    \\\\nexport const Icon = () => <Button \\\\n                            disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                            type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n                            handleClick={action('Icon button clicked')}\\\\n                            handleInputFocus={action('onFocus')}\\\\n                            handleInputBlur={action('onBlur')}\\\\n                            btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n                            fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                            disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n                        </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":19},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":30},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":19},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":30}},\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":32},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":43},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":32},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":43}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":45},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":56},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":45},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":56}},\\\"button--alert\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":59},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":68},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":59},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":68}},\\\"button--outlined\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":70},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":79},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":70},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":79}},\\\"button--link\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":81},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":90},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":81},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":90}},\\\"button--delete\\\":{\\\"startLoc\\\":{\\\"col\\\":22,\\\"line\\\":92},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":101},\\\"startBody\\\":{\\\"col\\\":22,\\\"line\\\":92},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":101}},\\\"button--line\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":103},\\\"endLoc\\\":{\\\"col\\\":29,\\\"line\\\":112},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":103},\\\"endBody\\\":{\\\"col\\\":29,\\\"line\\\":112}},\\\"button--icon\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":114},\\\"endLoc\\\":{\\\"col\\\":33,\\\"line\\\":123},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":114},\\\"endBody\\\":{\\\"col\\\":33,\\\"line\\\":123}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  component: Button,\\n  title: 'Button',\\n  componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/\\n};\\n\\nstoriesOf('Button', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).addParameters({ component: Badge });\\n\\n\\nexport const Default = () => (\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'default')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Default\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n              </Button>\\n);\\n\\nexport const Long = () => (\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'long')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Default\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n            </Button>\\n);\\n\\nexport const Short = () => (\\n                        <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"short\\\")}\\n                            handleClick={action('Short button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n);\\n  \\n\\nexport const Alert = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const outlined = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Link = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Delete = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"delete\\\")}\\n                            handleClick={action('Delete button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n                        \\nexport const Line = () => <Button \\n                        disabled={boolean(\\\"Disabled\\\", false)}\\n                        type={text(\\\"Type\\\", \\\"line\\\")}\\n                        handleClick={action('Line button clicked')}\\n                        handleInputFocus={action('onFocus')}\\n                        handleInputBlur={action('onBlur')}\\n                        btnText={text(\\\"label\\\",\\\"Line\\\")}\\n                        fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                        disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                    </Button>   \\n                    \\nexport const Icon = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"icon\\\")}\\n                            handleClick={action('Icon button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>                      \";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"button--default\":{\"startLoc\":{\"col\":23,\"line\":41},\"endLoc\":{\"col\":1,\"line\":52},\"startBody\":{\"col\":23,\"line\":41},\"endBody\":{\"col\":1,\"line\":52}},\"button--long\":{\"startLoc\":{\"col\":20,\"line\":54},\"endLoc\":{\"col\":1,\"line\":65},\"startBody\":{\"col\":20,\"line\":54},\"endBody\":{\"col\":1,\"line\":65}},\"button--short\":{\"startLoc\":{\"col\":21,\"line\":67},\"endLoc\":{\"col\":1,\"line\":78},\"startBody\":{\"col\":21,\"line\":67},\"endBody\":{\"col\":1,\"line\":78}},\"button--alert\":{\"startLoc\":{\"col\":21,\"line\":81},\"endLoc\":{\"col\":33,\"line\":90},\"startBody\":{\"col\":21,\"line\":81},\"endBody\":{\"col\":33,\"line\":90}},\"button--outlined\":{\"startLoc\":{\"col\":24,\"line\":92},\"endLoc\":{\"col\":33,\"line\":101},\"startBody\":{\"col\":24,\"line\":92},\"endBody\":{\"col\":33,\"line\":101}},\"button--link\":{\"startLoc\":{\"col\":20,\"line\":103},\"endLoc\":{\"col\":33,\"line\":112},\"startBody\":{\"col\":20,\"line\":103},\"endBody\":{\"col\":33,\"line\":112}},\"button--delete\":{\"startLoc\":{\"col\":22,\"line\":114},\"endLoc\":{\"col\":33,\"line\":123},\"startBody\":{\"col\":22,\"line\":114},\"endBody\":{\"col\":33,\"line\":123}},\"button--line\":{\"startLoc\":{\"col\":20,\"line\":125},\"endLoc\":{\"col\":29,\"line\":134},\"startBody\":{\"col\":20,\"line\":125},\"endBody\":{\"col\":29,\"line\":134}},\"button--icon\":{\"startLoc\":{\"col\":20,\"line\":136},\"endLoc\":{\"col\":33,\"line\":145},\"startBody\":{\"col\":20,\"line\":136},\"endBody\":{\"col\":33,\"line\":145}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\n\\nexport default {\\n  component: Button,\\n  title: 'Button',\\n  componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/\\n};\\n\\nstoriesOf('Button', module).addParameters({ component: Badge });\\n\\n\\nexport const Default = () => (\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'default')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Default\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n              </Button>\\n);\\n\\nexport const Long = () => (\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'long')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Default\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n            </Button>\\n);\\n\\nexport const Short = () => (\\n                        <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"short\\\")}\\n                            handleClick={action('Short button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n);\\n  \\n\\nexport const Alert = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"alert\\\")}\\n                            handleClick={action('Alert button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const outlined = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"outlined\\\")}\\n                            handleClick={action('outlined button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Link = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"link\\\")}\\n                            handleClick={action('Link button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Link\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n\\nexport const Delete = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"delete\\\")}\\n                            handleClick={action('Delete button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>\\n                        \\nexport const Line = () => <Button \\n                        disabled={boolean(\\\"Disabled\\\", false)}\\n                        type={text(\\\"Type\\\", \\\"line\\\")}\\n                        handleClick={action('Line button clicked')}\\n                        handleInputFocus={action('onFocus')}\\n                        handleInputBlur={action('onBlur')}\\n                        btnText={text(\\\"label\\\",\\\"Line\\\")}\\n                        fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                        disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                    </Button>   \\n                    \\nexport const Icon = () => <Button \\n                            disabled={boolean(\\\"Disabled\\\", false)}\\n                            type={text(\\\"Type\\\", \\\"icon\\\")}\\n                            handleClick={action('Icon button clicked')}\\n                            handleInputFocus={action('onFocus')}\\n                            handleInputBlur={action('onBlur')}\\n                            btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n                            fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                            disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n                        </Button>                      \";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"button--default\":{\"startLoc\":{\"col\":23,\"line\":19},\"endLoc\":{\"col\":1,\"line\":30},\"startBody\":{\"col\":23,\"line\":19},\"endBody\":{\"col\":1,\"line\":30}},\"button--long\":{\"startLoc\":{\"col\":20,\"line\":32},\"endLoc\":{\"col\":1,\"line\":43},\"startBody\":{\"col\":20,\"line\":32},\"endBody\":{\"col\":1,\"line\":43}},\"button--short\":{\"startLoc\":{\"col\":21,\"line\":45},\"endLoc\":{\"col\":1,\"line\":56},\"startBody\":{\"col\":21,\"line\":45},\"endBody\":{\"col\":1,\"line\":56}},\"button--alert\":{\"startLoc\":{\"col\":21,\"line\":59},\"endLoc\":{\"col\":33,\"line\":68},\"startBody\":{\"col\":21,\"line\":59},\"endBody\":{\"col\":33,\"line\":68}},\"button--outlined\":{\"startLoc\":{\"col\":24,\"line\":70},\"endLoc\":{\"col\":33,\"line\":79},\"startBody\":{\"col\":24,\"line\":70},\"endBody\":{\"col\":33,\"line\":79}},\"button--link\":{\"startLoc\":{\"col\":20,\"line\":81},\"endLoc\":{\"col\":33,\"line\":90},\"startBody\":{\"col\":20,\"line\":81},\"endBody\":{\"col\":33,\"line\":90}},\"button--delete\":{\"startLoc\":{\"col\":22,\"line\":92},\"endLoc\":{\"col\":33,\"line\":101},\"startBody\":{\"col\":22,\"line\":92},\"endBody\":{\"col\":33,\"line\":101}},\"button--line\":{\"startLoc\":{\"col\":20,\"line\":103},\"endLoc\":{\"col\":29,\"line\":112},\"startBody\":{\"col\":20,\"line\":103},\"endBody\":{\"col\":29,\"line\":112}},\"button--icon\":{\"startLoc\":{\"col\":20,\"line\":114},\"endLoc\":{\"col\":33,\"line\":123},\"startBody\":{\"col\":20,\"line\":114},\"endBody\":{\"col\":33,\"line\":123}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\n\n\nexport default {\n  component: Button,\n  title: 'Button',\n  componentSubtitle: 'Documentation of the Button React component',\n  decorators: [withKnobs],\n  excludeStories: /.*Data$/\n};\n\nstoriesOf('Button', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).addParameters({ component: Badge });\n\n\nexport const Default = () => (\n              <Button \n                disabled={boolean(\"Disabled\", false)}\n                type={text(\"Type\", 'default')}\n                handleClick={action('onClick')}\n                handleInputFocus={action('onFocus')}\n                handleInputBlur={action('onBlur')}\n                btnText={text(\"label\",\"Default\")}\n                fullWidth={boolean(\"fullWidth\", false)}\n                disableRipple={boolean(\"disableRipple\", false)}>\n              </Button>\n);\n\nexport const Long = () => (\n              <Button \n                disabled={boolean(\"Disabled\", false)}\n                type={text(\"Type\", 'long')}\n                handleClick={action('onClick')}\n                handleInputFocus={action('onFocus')}\n                handleInputBlur={action('onBlur')}\n                btnText={text(\"label\",\"Default\")}\n                fullWidth={boolean(\"fullWidth\", false)}\n                disableRipple={boolean(\"disableRipple\", false)}>\n            </Button>\n);\n\nexport const Short = () => (\n                        <Button \n                            disabled={boolean(\"Disabled\", false)}\n                            type={text(\"Type\", \"short\")}\n                            handleClick={action('Short button clicked')}\n                            handleInputFocus={action('onFocus')}\n                            handleInputBlur={action('onBlur')}\n                            btnText={text(\"label\",\"Short\")}\n                            fullWidth={boolean(\"fullWidth\", false)}\n                            disableRipple={boolean(\"disableRipple\", true)}>\n                        </Button>\n);\n  \n\nexport const Alert = () => <Button \n                            disabled={boolean(\"Disabled\", false)}\n                            type={text(\"Type\", \"alert\")}\n                            handleClick={action('Alert button clicked')}\n                            handleInputFocus={action('onFocus')}\n                            handleInputBlur={action('onBlur')}\n                            btnText={text(\"label\",\"Alert\")}\n                            fullWidth={boolean(\"fullWidth\", false)}\n                            disableRipple={boolean(\"disableRipple\", true)}>\n                        </Button>\n\nexport const outlined = () => <Button \n                            disabled={boolean(\"Disabled\", false)}\n                            type={text(\"Type\", \"outlined\")}\n                            handleClick={action('outlined button clicked')}\n                            handleInputFocus={action('onFocus')}\n                            handleInputBlur={action('onBlur')}\n                            btnText={text(\"label\",\"Outlined\")}\n                            fullWidth={boolean(\"fullWidth\", false)}\n                            disableRipple={boolean(\"disableRipple\", true)}>\n                        </Button>\n\nexport const Link = () => <Button \n                            disabled={boolean(\"Disabled\", false)}\n                            type={text(\"Type\", \"link\")}\n                            handleClick={action('Link button clicked')}\n                            handleInputFocus={action('onFocus')}\n                            handleInputBlur={action('onBlur')}\n                            btnText={text(\"label\",\"Link\")}\n                            fullWidth={boolean(\"fullWidth\", false)}\n                            disableRipple={boolean(\"disableRipple\", true)}>\n                        </Button>\n\nexport const Delete = () => <Button \n                            disabled={boolean(\"Disabled\", false)}\n                            type={text(\"Type\", \"delete\")}\n                            handleClick={action('Delete button clicked')}\n                            handleInputFocus={action('onFocus')}\n                            handleInputBlur={action('onBlur')}\n                            btnText={text(\"label\",\"Delete\")}\n                            fullWidth={boolean(\"fullWidth\", false)}\n                            disableRipple={boolean(\"disableRipple\", true)}>\n                        </Button>\n                        \nexport const Line = () => <Button \n                        disabled={boolean(\"Disabled\", false)}\n                        type={text(\"Type\", \"line\")}\n                        handleClick={action('Line button clicked')}\n                        handleInputFocus={action('onFocus')}\n                        handleInputBlur={action('onBlur')}\n                        btnText={text(\"label\",\"Line\")}\n                        fullWidth={boolean(\"fullWidth\", false)}\n                        disableRipple={boolean(\"disableRipple\", true)}>\n                    </Button>   \n                    \nexport const Icon = () => <Button \n                            disabled={boolean(\"Disabled\", false)}\n                            type={text(\"Type\", \"icon\")}\n                            handleClick={action('Icon button clicked')}\n                            handleInputFocus={action('onFocus')}\n                            handleInputBlur={action('onBlur')}\n                            btnText={text(\"label\",\"Icon\")}\n                            fullWidth={boolean(\"fullWidth\", false)}\n                            disableRipple={boolean(\"disableRipple\", true)}>\n                        </Button>                      "]},"metadata":{},"sourceType":"module"}