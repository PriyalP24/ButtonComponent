{"ast":null,"code":"var _jsxFileName = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.component.stories.js\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\nimport PropTypes from 'prop-types';\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    \\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  // componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\nButton.propTypes = {\\\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\\\n};\\\\nButton.defaultProps = {\\\\n  status: 'Outlined',\\\\n}; \\\\n\\\\n// storiesOf('Button', module)\\\\n// // .addParameters({ component: Button })\\\\n// .add('Long', () =>  <Button \\\\n//                 disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n//                 handleClick={action('onClick')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n//             </Button>)\\\\n// .add('Short', () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />)      \\\\n\\\\n\\\\n// export const Default = () => (<Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'default')}  \\\\n//                 handleClick={action('onClick')} \\\\n//                 handleInputFocus={action('onFocus')} \\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}  \\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />)\\\\n             \\\\n                \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />\\\\n           \\\\n\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />   \\\\n                        \\\\n\\\\n  \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endLoc\\\":{\\\"col\\\":66,\\\"line\\\":63},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endBody\\\":{\\\"col\\\":66,\\\"line\\\":63}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":73},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":73}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\nimport PropTypes from 'prop-types';\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    \\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  // componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\nButton.propTypes = {\\\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\\\n};\\\\nButton.defaultProps = {\\\\n  status: 'Outlined',\\\\n}; \\\\n\\\\n// storiesOf('Button', module)\\\\n// // .addParameters({ component: Button })\\\\n// .add('Long', () =>  <Button \\\\n//                 disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n//                 handleClick={action('onClick')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n//             </Button>)\\\\n// .add('Short', () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />)      \\\\n\\\\n\\\\n// export const Default = () => (<Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'default')}  \\\\n//                 handleClick={action('onClick')} \\\\n//                 handleInputFocus={action('onFocus')} \\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}  \\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />)\\\\n             \\\\n                \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />\\\\n           \\\\n\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />   \\\\n                        \\\\n\\\\n  \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\",\\\"locationsMap\\\":{\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endLoc\\\":{\\\"col\\\":66,\\\"line\\\":63},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endBody\\\":{\\\"col\\\":66,\\\"line\\\":63}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":73},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":73}}}},\\n    \\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\n// storiesOf('Button', module)\\n// // .addParameters({ component: Button })\\n// .add('Long', () =>  <Button \\n//                 disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", 'long')}\\n//                 handleClick={action('onClick')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n//             </Button>)\\n// .add('Short', () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />)      \\n\\n\\n// export const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n//                 handleClick={action('onClick')} \\n//                 handleInputFocus={action('onFocus')} \\n//                 btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\nexport const Long = addSourceDecorator(() => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n           \\n\\nexport const Short = addSourceDecorator(() => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});  \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"button--long\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 81\n    },\n    \"endLoc\": {\n      \"col\": 204,\n      \"line\": 85\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 81\n    },\n    \"endBody\": {\n      \"col\": 204,\n      \"line\": 85\n    }\n  },\n  \"button--short\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 88\n    },\n    \"endLoc\": {\n      \"col\": 203,\n      \"line\": 95\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 88\n    },\n    \"endBody\": {\n      \"col\": 203,\n      \"line\": 95\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    \\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\n// storiesOf('Button', module)\\n// // .addParameters({ component: Button })\\n// .add('Long', () =>  <Button \\n//                 disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", 'long')}\\n//                 handleClick={action('onClick')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n//             </Button>)\\n// .add('Short', () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />)      \\n\\n\\n// export const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n//                 handleClick={action('onClick')} \\n//                 handleInputFocus={action('onFocus')} \\n//                 btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\nexport const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />\\n           \\n\\nexport const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />   \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"button--long\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 59\n    },\n    \"endLoc\": {\n      \"col\": 66,\n      \"line\": 63\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 59\n    },\n    \"endBody\": {\n      \"col\": 66,\n      \"line\": 63\n    }\n  },\n  \"button--short\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 66\n    },\n    \"endLoc\": {\n      \"col\": 65,\n      \"line\": 73\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 66\n    },\n    \"endBody\": {\n      \"col\": 65,\n      \"line\": 73\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\nimport PropTypes from 'prop-types';\nexport default {\n  title: 'Button',\n  parameters: {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\nimport PropTypes from 'prop-types';\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    \\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  // componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\nButton.propTypes = {\\\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\\\n};\\\\nButton.defaultProps = {\\\\n  status: 'Outlined',\\\\n}; \\\\n\\\\n// storiesOf('Button', module)\\\\n// // .addParameters({ component: Button })\\\\n// .add('Long', () =>  <Button \\\\n//                 disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n//                 handleClick={action('onClick')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n//             </Button>)\\\\n// .add('Short', () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />)      \\\\n\\\\n\\\\n// export const Default = () => (<Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'default')}  \\\\n//                 handleClick={action('onClick')} \\\\n//                 handleInputFocus={action('onFocus')} \\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}  \\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />)\\\\n             \\\\n                \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />\\\\n           \\\\n\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />   \\\\n                        \\\\n\\\\n  \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endLoc\\\":{\\\"col\\\":66,\\\"line\\\":63},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endBody\\\":{\\\"col\\\":66,\\\"line\\\":63}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":73},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":73}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\nimport PropTypes from 'prop-types';\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    \\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  // componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\nButton.propTypes = {\\\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\\\n};\\\\nButton.defaultProps = {\\\\n  status: 'Outlined',\\\\n}; \\\\n\\\\n// storiesOf('Button', module)\\\\n// // .addParameters({ component: Button })\\\\n// .add('Long', () =>  <Button \\\\n//                 disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n//                 handleClick={action('onClick')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n//             </Button>)\\\\n// .add('Short', () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />)      \\\\n\\\\n\\\\n// export const Default = () => (<Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'default')}  \\\\n//                 handleClick={action('onClick')} \\\\n//                 handleInputFocus={action('onFocus')} \\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}  \\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />)\\\\n             \\\\n                \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />\\\\n           \\\\n\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />   \\\\n                        \\\\n\\\\n  \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\",\\\"locationsMap\\\":{\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endLoc\\\":{\\\"col\\\":66,\\\"line\\\":63},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endBody\\\":{\\\"col\\\":66,\\\"line\\\":63}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":73},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":73}}}},\\n    \\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\n// storiesOf('Button', module)\\n// // .addParameters({ component: Button })\\n// .add('Long', () =>  <Button \\n//                 disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", 'long')}\\n//                 handleClick={action('onClick')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n//             </Button>)\\n// .add('Short', () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />)      \\n\\n\\n// export const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n//                 handleClick={action('onClick')} \\n//                 handleInputFocus={action('onFocus')} \\n//                 btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\nexport const Long = addSourceDecorator(() => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n           \\n\\nexport const Short = addSourceDecorator(() => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});  \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \",\n      \"locationsMap\": {\n        \"button--long\": {\n          \"startLoc\": {\n            \"col\": 20,\n            \"line\": 81\n          },\n          \"endLoc\": {\n            \"col\": 204,\n            \"line\": 85\n          },\n          \"startBody\": {\n            \"col\": 20,\n            \"line\": 81\n          },\n          \"endBody\": {\n            \"col\": 204,\n            \"line\": 85\n          }\n        },\n        \"button--short\": {\n          \"startLoc\": {\n            \"col\": 21,\n            \"line\": 88\n          },\n          \"endLoc\": {\n            \"col\": 203,\n            \"line\": 95\n          },\n          \"startBody\": {\n            \"col\": 21,\n            \"line\": 88\n          },\n          \"endBody\": {\n            \"col\": 203,\n            \"line\": 95\n          }\n        }\n      }\n    },\n    \"storySource\": {\n      \"source\": \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    \\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\n// storiesOf('Button', module)\\n// // .addParameters({ component: Button })\\n// .add('Long', () =>  <Button \\n//                 disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", 'long')}\\n//                 handleClick={action('onClick')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n//             </Button>)\\n// .add('Short', () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />)      \\n\\n\\n// export const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n//                 handleClick={action('onClick')} \\n//                 handleInputFocus={action('onFocus')} \\n//                 btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\nexport const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />\\n           \\n\\nexport const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />   \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \",\n      \"locationsMap\": {\n        \"button--long\": {\n          \"startLoc\": {\n            \"col\": 20,\n            \"line\": 59\n          },\n          \"endLoc\": {\n            \"col\": 66,\n            \"line\": 63\n          },\n          \"startBody\": {\n            \"col\": 20,\n            \"line\": 59\n          },\n          \"endBody\": {\n            \"col\": 66,\n            \"line\": 63\n          }\n        },\n        \"button--short\": {\n          \"startLoc\": {\n            \"col\": 21,\n            \"line\": 66\n          },\n          \"endLoc\": {\n            \"col\": 65,\n            \"line\": 73\n          },\n          \"startBody\": {\n            \"col\": 21,\n            \"line\": 66\n          },\n          \"endBody\": {\n            \"col\": 65,\n            \"line\": 73\n          }\n        }\n      }\n    },\n    componentSubtitle: 'Documentation of the Button React component'\n  },\n  component: Button,\n  // componentSubtitle: 'Documentation of the Button React component',\n  decorators: [withKnobs],\n  excludeStories: /.*Data$/\n};\nButton.propTypes = {\n  status: PropTypes.oneOf(['Long', 'Short', 'alert', 'Outlined', 'Link', 'Delete', 'Line', 'Icon'])\n};\nButton.defaultProps = {\n  status: 'Outlined'\n}; // storiesOf('Button', module)\n// // .addParameters({ component: Button })\n// .add('Long', () =>  <Button \n//                 disabled={boolean(\"Disabled\", false)}\n//                 type={text(\"Type\", 'long')}\n//                 handleClick={action('onClick')}\n//                 handleInputFocus={action('onFocus')}\n//                 handleInputBlur={action('onBlur')}\n//                 btnText={text(\"label\",\"Long\")}\n//                 fullWidth={boolean(\"fullWidth\", false)}\n//                 disableRipple={boolean(\"disableRipple\", false)}>\n//             </Button>)\n// .add('Short', () => <Button  disabled={boolean(\"Disabled\", false)}\n//                 type={text(\"Type\", \"short\")}\n//                 handleClick={action('Short button clicked')}\n//                 handleInputFocus={action('onFocus')}\n//                 handleInputBlur={action('onBlur')}\n//                 btnText={text(\"label\",\"Short\")}\n//                 fullWidth={boolean(\"fullWidth\", false)}\n//                 disableRipple={boolean(\"disableRipple\", true)} />)      \n// export const Default = () => (<Button disabled={boolean(\"Disabled\", false)} type={text(\"Type\", 'default')}  \n//                 handleClick={action('onClick')} \n//                 handleInputFocus={action('onFocus')} \n//                 btnText={text(\"label\",\"Default\")}  \n//                 fullWidth={boolean(\"fullWidth\", false)}\n//                 disableRipple={boolean(\"disableRipple\", false)} />)\n\nexport const Long = addSourceDecorator(addSourceDecorator(() => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", 'long'),\n  handleClick: action('onClick'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Long\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", false),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n});\n;\nexport const Short = addSourceDecorator(addSourceDecorator(() => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"short\"),\n  handleClick: action('Short button clicked'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Short\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", true),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__,\n  __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__\n}); // export const Alert = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"alert\")}\n//                             handleClick={action('Alert button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Alert\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n// export const outlined = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"outlined\")}\n//                             handleClick={action('outlined button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Outlined\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n// export const Link = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"link\")}\n//                             handleClick={action('Link button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Link\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n// export const Delete = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"delete\")}\n//                             handleClick={action('Delete button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Delete\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n// export const Line = () => <Button \n//                         disabled={boolean(\"Disabled\", false)}\n//                         type={text(\"Type\", \"line\")}\n//                         handleClick={action('Line button clicked')}\n//                         handleInputFocus={action('onFocus')}\n//                         handleInputBlur={action('onBlur')}\n//                         btnText={text(\"label\",\"Line\")}\n//                         fullWidth={boolean(\"fullWidth\", false)}\n//                         disableRipple={boolean(\"disableRipple\", true)}>\n//                     </Button>   \n// export const Icon = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"icon\")}\n//                             handleClick={action('Icon button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Icon\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>","map":{"version":3,"sources":["/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.component.stories.js"],"names":["withSourceLoader","require","withSource","addSourceDecorator","addSource","__SOURCE_PREFIX__","__STORY__","__ADDS_MAP__","__MAIN_FILE_LOCATION__","__MODULE_DEPENDENCIES__","__LOCAL_DEPENDENCIES__","__IDS_TO_FRAMEWORKS__","React","storiesOf","action","Button","withKnobs","text","boolean","PropTypes","title","parameters","componentSubtitle","component","decorators","excludeStories","propTypes","status","oneOf","defaultProps","Long","Short"],"mappings":";;AACA;AACA;AACA;AACA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,kCAAD,CAAP,CAA4CC,UAAnE,C,CACA;;;AACA,IAAIC,kBAAkB,GAAGF,OAAO,CAAC,kCAAD,CAAP,CAA4CG,SAArE,C,CACA;;;AACA,IAAIC,iBAAiB,GAAG,+DAAxB,C,CACA;;AACA,IAAIC,SAAS,GAAG,okvBAAhB,C,CACA;;AACA,IAAIC,YAAY,GAAG;AAAC,kBAAe;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,GAAP;AAAW,cAAO;AAAlB,KAA1C;AAAgE,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA5E;AAAiG,eAAU;AAAC,aAAM,GAAP;AAAW,cAAO;AAAlB;AAA3G,GAAhB;AAAkJ,mBAAgB;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,GAAP;AAAW,cAAO;AAAlB,KAA1C;AAAgE,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA5E;AAAiG,eAAU;AAAC,aAAM,GAAP;AAAW,cAAO;AAAlB;AAA3G;AAAlK,CAAnB,C,CACA;;AACA,IAAIC,sBAAsB,GAAG,8BAA7B,C,CACA;;AACA,IAAIC,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAIC,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAIC,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAIX,gBAAgB,GAAGC,OAAO,CAAC,kCAAD,CAAP,CAA4CC,UAAnE,C,CACA;;;AACA,IAAIC,kBAAkB,GAAGF,OAAO,CAAC,kCAAD,CAAP,CAA4CG,SAArE,C,CACA;;;AACA,IAAIC,iBAAiB,GAAG,+DAAxB,C,CACA;;AACA,IAAIC,SAAS,GAAG,whOAAhB,C,CACA;;AACA,IAAIC,YAAY,GAAG;AAAC,kBAAe;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1C;AAA+D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA3E;AAAgG,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAA1G,GAAhB;AAAgJ,mBAAgB;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1C;AAA+D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA3E;AAAgG,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAA1G;AAAhK,CAAnB,C,CACA;;AACA,IAAIC,sBAAsB,GAAG,8BAA7B,C,CACA;;AACA,IAAIC,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAIC,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAIC,qBAAqB,GAAG,EAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAA1B,QAAyC,wBAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,eAAe;AACbC,EAAAA,KAAK,EAAE,QADM;AAEbC,EAAAA,UAAU,EAAE;AAAC,mBAAc;AAAC,gBAAS,okvBAAV;AAA+kvB,sBAAe;AAAC,wBAAe;AAAC,sBAAW;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB,WAAZ;AAAiC,oBAAS;AAAC,mBAAM,GAAP;AAAW,oBAAO;AAAlB,WAA1C;AAAgE,uBAAY;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB,WAA5E;AAAiG,qBAAU;AAAC,mBAAM,GAAP;AAAW,oBAAO;AAAlB;AAA3G,SAAhB;AAAkJ,yBAAgB;AAAC,sBAAW;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB,WAAZ;AAAiC,oBAAS;AAAC,mBAAM,GAAP;AAAW,oBAAO;AAAlB,WAA1C;AAAgE,uBAAY;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB,WAA5E;AAAiG,qBAAU;AAAC,mBAAM,GAAP;AAAW,oBAAO;AAAlB;AAA3G;AAAlK;AAA9lvB,KAAf;AAAm5vB,mBAAc;AAAC,gBAAS,whOAAV;AAAmiO,sBAAe;AAAC,wBAAe;AAAC,sBAAW;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB,WAAZ;AAAiC,oBAAS;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB,WAA1C;AAA+D,uBAAY;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB,WAA3E;AAAgG,qBAAU;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB;AAA1G,SAAhB;AAAgJ,yBAAgB;AAAC,sBAAW;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB,WAAZ;AAAiC,oBAAS;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB,WAA1C;AAA+D,uBAAY;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB,WAA3E;AAAgG,qBAAU;AAAC,mBAAM,EAAP;AAAU,oBAAO;AAAjB;AAA1G;AAAhK;AAAljO,KAAj6vB;AAEVC,IAAAA,iBAAiB,EAAE;AAFT,GAFC;AAMbC,EAAAA,SAAS,EAAER,MANE;AAOb;AACAS,EAAAA,UAAU,EAAE,CAACR,SAAD,CARC;AASbS,EAAAA,cAAc,EAAE;AATH,CAAf;AAYAV,MAAM,CAACW,SAAP,GAAmB;AACjBC,EAAAA,MAAM,EAAER,SAAS,CAACS,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA0B,UAA1B,EAAqC,MAArC,EAA4C,QAA5C,EAAqD,MAArD,EAA4D,MAA5D,CAAhB;AADS,CAAnB;AAGAb,MAAM,CAACc,YAAP,GAAsB;AACpBF,EAAAA,MAAM,EAAE;AADY,CAAtB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAO,MAAMG,IAAI,GAAG3B,kBAAkB,CAACA,kBAAkB,CAAC,MAAM,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAEe,OAAO,CAAC,UAAD,EAAa,KAAb,CAAzB;AAA8C,EAAA,IAAI,EAAED,IAAI,CAAC,MAAD,EAAS,MAAT,CAAxD;AAA0E,EAAA,WAAW,EAAEH,MAAM,CAAC,SAAD,CAA7F;AAA0G,EAAA,gBAAgB,EAAEA,MAAM,CAAC,SAAD,CAAlI;AAChD,EAAA,eAAe,EAAEA,MAAM,CAAC,QAAD,CADyB;AAEhD,EAAA,OAAO,EAAEG,IAAI,CAAC,OAAD,EAAS,MAAT,CAFmC;AAGhD,EAAA,SAAS,EAAEC,OAAO,CAAC,WAAD,EAAc,KAAd,CAH8B;AAIhD,EAAA,aAAa,EAAEA,OAAO,CAAC,eAAD,EAAkB,KAAlB,CAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAP,EAIW;AAACZ,EAAAA,SAAD;AAAYC,EAAAA,YAAZ;AAAyBC,EAAAA,sBAAzB;AAAgDC,EAAAA,uBAAhD;AAAwEC,EAAAA,sBAAxE;AAA+FL,EAAAA,iBAA/F;AAAiHM,EAAAA;AAAjH,CAJX,CAAnB,EAIwK;AAACL,EAAAA,SAAD;AAAYC,EAAAA,YAAZ;AAAyBC,EAAAA,sBAAzB;AAAgDC,EAAAA,uBAAhD;AAAwEC,EAAAA,sBAAxE;AAA+FL,EAAAA,iBAA/F;AAAiHM,EAAAA;AAAjH,CAJxK,CAA/B;AAIgV;AAGvV,OAAO,MAAMoB,KAAK,GAAG5B,kBAAkB,CAACA,kBAAkB,CAAC,MAAM,oBAAC,MAAD;AAAS,EAAA,QAAQ,EAAEe,OAAO,CAAC,UAAD,EAAa,KAAb,CAA1B;AACjD,EAAA,IAAI,EAAED,IAAI,CAAC,MAAD,EAAS,OAAT,CADuC;AAEjD,EAAA,WAAW,EAAEH,MAAM,CAAC,sBAAD,CAF8B;AAGjD,EAAA,gBAAgB,EAAEA,MAAM,CAAC,SAAD,CAHyB;AAIjD,EAAA,eAAe,EAAEA,MAAM,CAAC,QAAD,CAJ0B;AAKjD,EAAA,OAAO,EAAEG,IAAI,CAAC,OAAD,EAAS,OAAT,CALoC;AAMjD,EAAA,SAAS,EAAEC,OAAO,CAAC,WAAD,EAAc,KAAd,CAN+B;AAOjD,EAAA,aAAa,EAAEA,OAAO,CAAC,eAAD,EAAkB,IAAlB,CAP2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAP,EAOS;AAACZ,EAAAA,SAAD;AAAYC,EAAAA,YAAZ;AAAyBC,EAAAA,sBAAzB;AAAgDC,EAAAA,uBAAhD;AAAwEC,EAAAA,sBAAxE;AAA+FL,EAAAA,iBAA/F;AAAiHM,EAAAA;AAAjH,CAPT,CAAnB,EAOsK;AAACL,EAAAA,SAAD;AAAYC,EAAAA,YAAZ;AAAyBC,EAAAA,sBAAzB;AAAgDC,EAAAA,uBAAhD;AAAwEC,EAAAA,sBAAxE;AAA+FL,EAAAA,iBAA/F;AAAiHM,EAAAA;AAAjH,CAPtK,CAAhC,C,CAYP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\nimport PropTypes from 'prop-types';\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    \\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  // componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\nButton.propTypes = {\\\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\\\n};\\\\nButton.defaultProps = {\\\\n  status: 'Outlined',\\\\n}; \\\\n\\\\n// storiesOf('Button', module)\\\\n// // .addParameters({ component: Button })\\\\n// .add('Long', () =>  <Button \\\\n//                 disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n//                 handleClick={action('onClick')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n//             </Button>)\\\\n// .add('Short', () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />)      \\\\n\\\\n\\\\n// export const Default = () => (<Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'default')}  \\\\n//                 handleClick={action('onClick')} \\\\n//                 handleInputFocus={action('onFocus')} \\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}  \\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />)\\\\n             \\\\n                \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />\\\\n           \\\\n\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />   \\\\n                        \\\\n\\\\n  \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endLoc\\\":{\\\"col\\\":66,\\\"line\\\":63},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endBody\\\":{\\\"col\\\":66,\\\"line\\\":63}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":73},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":73}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\nimport PropTypes from 'prop-types';\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    \\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  // componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\nButton.propTypes = {\\\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\\\n};\\\\nButton.defaultProps = {\\\\n  status: 'Outlined',\\\\n}; \\\\n\\\\n// storiesOf('Button', module)\\\\n// // .addParameters({ component: Button })\\\\n// .add('Long', () =>  <Button \\\\n//                 disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n//                 handleClick={action('onClick')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n//             </Button>)\\\\n// .add('Short', () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />)      \\\\n\\\\n\\\\n// export const Default = () => (<Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'default')}  \\\\n//                 handleClick={action('onClick')} \\\\n//                 handleInputFocus={action('onFocus')} \\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}  \\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />)\\\\n             \\\\n                \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />\\\\n           \\\\n\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />   \\\\n                        \\\\n\\\\n  \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\",\\\"locationsMap\\\":{\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endLoc\\\":{\\\"col\\\":66,\\\"line\\\":63},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endBody\\\":{\\\"col\\\":66,\\\"line\\\":63}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":73},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":73}}}},\\n    \\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\n// storiesOf('Button', module)\\n// // .addParameters({ component: Button })\\n// .add('Long', () =>  <Button \\n//                 disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", 'long')}\\n//                 handleClick={action('onClick')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n//             </Button>)\\n// .add('Short', () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />)      \\n\\n\\n// export const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n//                 handleClick={action('onClick')} \\n//                 handleInputFocus={action('onFocus')} \\n//                 btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\nexport const Long = addSourceDecorator(() => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n           \\n\\nexport const Short = addSourceDecorator(() => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});  \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"button--long\":{\"startLoc\":{\"col\":20,\"line\":81},\"endLoc\":{\"col\":204,\"line\":85},\"startBody\":{\"col\":20,\"line\":81},\"endBody\":{\"col\":204,\"line\":85}},\"button--short\":{\"startLoc\":{\"col\":21,\"line\":88},\"endLoc\":{\"col\":203,\"line\":95},\"startBody\":{\"col\":21,\"line\":88},\"endBody\":{\"col\":203,\"line\":95}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    \\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\n// storiesOf('Button', module)\\n// // .addParameters({ component: Button })\\n// .add('Long', () =>  <Button \\n//                 disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", 'long')}\\n//                 handleClick={action('onClick')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n//             </Button>)\\n// .add('Short', () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />)      \\n\\n\\n// export const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n//                 handleClick={action('onClick')} \\n//                 handleInputFocus={action('onFocus')} \\n//                 btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\nexport const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />\\n           \\n\\nexport const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />   \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"button--long\":{\"startLoc\":{\"col\":20,\"line\":59},\"endLoc\":{\"col\":66,\"line\":63},\"startBody\":{\"col\":20,\"line\":59},\"endBody\":{\"col\":66,\"line\":63}},\"button--short\":{\"startLoc\":{\"col\":21,\"line\":66},\"endLoc\":{\"col\":65,\"line\":73},\"startBody\":{\"col\":21,\"line\":66},\"endBody\":{\"col\":65,\"line\":73}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\nimport PropTypes from 'prop-types';\n\n\nexport default {\n  title: 'Button',\n  parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\nimport PropTypes from 'prop-types';\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    \\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  // componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\nButton.propTypes = {\\\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\\\n};\\\\nButton.defaultProps = {\\\\n  status: 'Outlined',\\\\n}; \\\\n\\\\n// storiesOf('Button', module)\\\\n// // .addParameters({ component: Button })\\\\n// .add('Long', () =>  <Button \\\\n//                 disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n//                 handleClick={action('onClick')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n//             </Button>)\\\\n// .add('Short', () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />)      \\\\n\\\\n\\\\n// export const Default = () => (<Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'default')}  \\\\n//                 handleClick={action('onClick')} \\\\n//                 handleInputFocus={action('onFocus')} \\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}  \\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />)\\\\n             \\\\n                \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />\\\\n           \\\\n\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />   \\\\n                        \\\\n\\\\n  \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endLoc\\\":{\\\"col\\\":66,\\\"line\\\":63},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endBody\\\":{\\\"col\\\":66,\\\"line\\\":63}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":73},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":73}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\nimport PropTypes from 'prop-types';\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    \\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  component: Button,\\\\n  // componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\nButton.propTypes = {\\\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\\\n};\\\\nButton.defaultProps = {\\\\n  status: 'Outlined',\\\\n}; \\\\n\\\\n// storiesOf('Button', module)\\\\n// // .addParameters({ component: Button })\\\\n// .add('Long', () =>  <Button \\\\n//                 disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n//                 handleClick={action('onClick')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n//             </Button>)\\\\n// .add('Short', () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />)      \\\\n\\\\n\\\\n// export const Default = () => (<Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'default')}  \\\\n//                 handleClick={action('onClick')} \\\\n//                 handleInputFocus={action('onFocus')} \\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}  \\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />)\\\\n             \\\\n                \\\\n\\\\nexport const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />\\\\n           \\\\n\\\\nexport const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n                handleClick={action('Short button clicked')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />   \\\\n                        \\\\n\\\\n  \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\",\\\"locationsMap\\\":{\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endLoc\\\":{\\\"col\\\":66,\\\"line\\\":63},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":59},\\\"endBody\\\":{\\\"col\\\":66,\\\"line\\\":63}},\\\"button--short\\\":{\\\"startLoc\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endLoc\\\":{\\\"col\\\":65,\\\"line\\\":73},\\\"startBody\\\":{\\\"col\\\":21,\\\"line\\\":66},\\\"endBody\\\":{\\\"col\\\":65,\\\"line\\\":73}}}},\\n    \\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\n// storiesOf('Button', module)\\n// // .addParameters({ component: Button })\\n// .add('Long', () =>  <Button \\n//                 disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", 'long')}\\n//                 handleClick={action('onClick')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n//             </Button>)\\n// .add('Short', () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />)      \\n\\n\\n// export const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n//                 handleClick={action('onClick')} \\n//                 handleInputFocus={action('onFocus')} \\n//                 btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\nexport const Long = addSourceDecorator(() => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n           \\n\\nexport const Short = addSourceDecorator(() => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});  \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \",\"locationsMap\":{\"button--long\":{\"startLoc\":{\"col\":20,\"line\":81},\"endLoc\":{\"col\":204,\"line\":85},\"startBody\":{\"col\":20,\"line\":81},\"endBody\":{\"col\":204,\"line\":85}},\"button--short\":{\"startLoc\":{\"col\":21,\"line\":88},\"endLoc\":{\"col\":203,\"line\":95},\"startBody\":{\"col\":21,\"line\":88},\"endBody\":{\"col\":203,\"line\":95}}}},\"storySource\":{\"source\":\"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    \\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  component: Button,\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\n// storiesOf('Button', module)\\n// // .addParameters({ component: Button })\\n// .add('Long', () =>  <Button \\n//                 disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", 'long')}\\n//                 handleClick={action('onClick')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n//             </Button>)\\n// .add('Short', () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />)      \\n\\n\\n// export const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n//                 handleClick={action('onClick')} \\n//                 handleInputFocus={action('onFocus')} \\n//                 btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\nexport const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />\\n           \\n\\nexport const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", \\\"short\\\")}\\n                handleClick={action('Short button clicked')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Short\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", true)} />   \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \",\"locationsMap\":{\"button--long\":{\"startLoc\":{\"col\":20,\"line\":59},\"endLoc\":{\"col\":66,\"line\":63},\"startBody\":{\"col\":20,\"line\":59},\"endBody\":{\"col\":66,\"line\":63}},\"button--short\":{\"startLoc\":{\"col\":21,\"line\":66},\"endLoc\":{\"col\":65,\"line\":73},\"startBody\":{\"col\":21,\"line\":66},\"endBody\":{\"col\":65,\"line\":73}}}},\n    \n    componentSubtitle: 'Documentation of the Button React component',\n  },\n  component: Button,\n  // componentSubtitle: 'Documentation of the Button React component',\n  decorators: [withKnobs],\n  excludeStories: /.*Data$/,\n  \n};\nButton.propTypes = {\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\n};\nButton.defaultProps = {\n  status: 'Outlined',\n}; \n\n// storiesOf('Button', module)\n// // .addParameters({ component: Button })\n// .add('Long', () =>  <Button \n//                 disabled={boolean(\"Disabled\", false)}\n//                 type={text(\"Type\", 'long')}\n//                 handleClick={action('onClick')}\n//                 handleInputFocus={action('onFocus')}\n//                 handleInputBlur={action('onBlur')}\n//                 btnText={text(\"label\",\"Long\")}\n//                 fullWidth={boolean(\"fullWidth\", false)}\n//                 disableRipple={boolean(\"disableRipple\", false)}>\n//             </Button>)\n// .add('Short', () => <Button  disabled={boolean(\"Disabled\", false)}\n//                 type={text(\"Type\", \"short\")}\n//                 handleClick={action('Short button clicked')}\n//                 handleInputFocus={action('onFocus')}\n//                 handleInputBlur={action('onBlur')}\n//                 btnText={text(\"label\",\"Short\")}\n//                 fullWidth={boolean(\"fullWidth\", false)}\n//                 disableRipple={boolean(\"disableRipple\", true)} />)      \n\n\n// export const Default = () => (<Button disabled={boolean(\"Disabled\", false)} type={text(\"Type\", 'default')}  \n//                 handleClick={action('onClick')} \n//                 handleInputFocus={action('onFocus')} \n//                 btnText={text(\"label\",\"Default\")}  \n//                 fullWidth={boolean(\"fullWidth\", false)}\n//                 disableRipple={boolean(\"disableRipple\", false)} />)\n             \n                \n\nexport const Long = addSourceDecorator(addSourceDecorator(() => <Button disabled={boolean(\"Disabled\", false)} type={text(\"Type\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\n                handleInputBlur={action('onBlur')}\n                btnText={text(\"label\",\"Long\")}\n                fullWidth={boolean(\"fullWidth\", false)}\n                disableRipple={boolean(\"disableRipple\", false)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n           \n\nexport const Short = addSourceDecorator(addSourceDecorator(() => <Button  disabled={boolean(\"Disabled\", false)}\n                type={text(\"Type\", \"short\")}\n                handleClick={action('Short button clicked')}\n                handleInputFocus={action('onFocus')}\n                handleInputBlur={action('onBlur')}\n                btnText={text(\"label\",\"Short\")}\n                fullWidth={boolean(\"fullWidth\", false)}\n                disableRipple={boolean(\"disableRipple\", true)} />, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});  \n                        \n\n  \n\n// export const Alert = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"alert\")}\n//                             handleClick={action('Alert button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Alert\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n\n// export const outlined = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"outlined\")}\n//                             handleClick={action('outlined button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Outlined\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n\n// export const Link = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"link\")}\n//                             handleClick={action('Link button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Link\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n\n// export const Delete = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"delete\")}\n//                             handleClick={action('Delete button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Delete\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n                        \n// export const Line = () => <Button \n//                         disabled={boolean(\"Disabled\", false)}\n//                         type={text(\"Type\", \"line\")}\n//                         handleClick={action('Line button clicked')}\n//                         handleInputFocus={action('onFocus')}\n//                         handleInputBlur={action('onBlur')}\n//                         btnText={text(\"label\",\"Line\")}\n//                         fullWidth={boolean(\"fullWidth\", false)}\n//                         disableRipple={boolean(\"disableRipple\", true)}>\n//                     </Button>   \n\n// export const Icon = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"icon\")}\n//                             handleClick={action('Icon button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Icon\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>                      "]},"metadata":{},"sourceType":"module"}