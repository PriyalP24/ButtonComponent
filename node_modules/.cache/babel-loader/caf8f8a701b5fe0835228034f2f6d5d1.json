{"ast":null,"code":"var _jsxFileName = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.component.stories.js\";\nimport React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\nexport default {\n  component: Button,\n  title: 'Button',\n  decorators: [withKnobs],\n  // Our exports that end in \"Data\" are not stories.\n  excludeStories: /.*Data$/\n};\nexport const taskData = {\n  disabled: false,\n  variant: \"outlined\",\n  fullwidth: false,\n  disableRipple: false\n};\nexport const actionsData = {\n  onClick: action('onClick'),\n  onFocus: action('onFocus')\n};\nexport const Long = () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", \"long\"),\n  variant: text(\"Variant\", \"outlined\"),\n  onClick: action('button-click'),\n  onFocus: action('button-focus') // buttonRef={ref => this.props.addRef(ref)}\n  ,\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", false),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  style: {\n    padding: \"2px 0 0 8px\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, text(\"label\", \"long\")));\nLong.displayName = \"Long\";\nLong.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Long\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/js/components/button.component.stories.js\"] = {\n    name: \"Long\",\n    docgenInfo: Long.__docgenInfo,\n    path: \"src/js/components/button.component.stories.js\"\n  };\n}","map":{"version":3,"sources":["/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.component.stories.js"],"names":["React","action","Button","withKnobs","text","boolean","component","title","decorators","excludeStories","taskData","disabled","variant","fullwidth","disableRipple","actionsData","onClick","onFocus","Long","padding"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAA1B,QAAyC,wBAAzC;AAEA,eAAe;AACbC,EAAAA,SAAS,EAAEJ,MADE;AAEbK,EAAAA,KAAK,EAAE,QAFM;AAGbC,EAAAA,UAAU,EAAE,CAACL,SAAD,CAHC;AAIb;AACAM,EAAAA,cAAc,EAAE;AALH,CAAf;AAQA,OAAO,MAAMC,QAAQ,GAAG;AACtBC,EAAAA,QAAQ,EAAE,KADY;AAEtBC,EAAAA,OAAO,EAAC,UAFc;AAGtBC,EAAAA,SAAS,EAAC,KAHY;AAItBC,EAAAA,aAAa,EAAC;AAJQ,CAAjB;AAOP,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,OAAO,EAAEf,MAAM,CAAC,SAAD,CADU;AAEzBgB,EAAAA,OAAO,EAAEhB,MAAM,CAAC,SAAD;AAFU,CAApB;AAKP,OAAO,MAAMiB,IAAI,GAAG,MAAM,oBAAC,MAAD;AACE,EAAA,QAAQ,EAAEb,OAAO,CAAC,UAAD,EAAa,KAAb,CADnB;AAEE,EAAA,IAAI,EAAED,IAAI,CAAC,MAAD,EAAS,MAAT,CAFZ;AAGE,EAAA,OAAO,EAAEA,IAAI,CAAC,SAAD,EAAY,UAAZ,CAHf;AAIE,EAAA,OAAO,EAAEH,MAAM,CAAC,cAAD,CAJjB;AAKE,EAAA,OAAO,EAAEA,MAAM,CAAC,cAAD,CALjB,CAME;AANF;AAOE,EAAA,SAAS,EAAEI,OAAO,CAAC,WAAD,EAAc,KAAd,CAPpB;AAQE,EAAA,aAAa,EAAEA,OAAO,CAAC,eAAD,EAAkB,KAAlB,CARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAYE;AAAM,EAAA,KAAK,EAAE;AAACc,IAAAA,OAAO,EAAE;AAAV,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwCf,IAAI,CAAC,OAAD,EAAU,MAAV,CAA5C,CAZF,CAAnB;AAAMc,I","sourcesContent":["import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\n\nexport default {\n  component: Button,\n  title: 'Button',\n  decorators: [withKnobs],\n  // Our exports that end in \"Data\" are not stories.\n  excludeStories: /.*Data$/\n};\n\nexport const taskData = {\n  disabled: false,\n  variant:\"outlined\",\n  fullwidth:false,\n  disableRipple:false\n};\n\nexport const actionsData = {\n  onClick: action('onClick'),\n  onFocus: action('onFocus'),\n};\n\nexport const Long = () => <Button \n                            disabled={boolean(\"Disabled\", false)}\n                            type={text(\"Type\", \"long\")}\n                            variant={text(\"Variant\", \"outlined\")}\n                            onClick={action('button-click')}\n                            onFocus={action('button-focus')}\n                            // buttonRef={ref => this.props.addRef(ref)}\n                            fullWidth={boolean(\"fullWidth\", false)}\n                            disableRipple={boolean(\"disableRipple\", false)}>\n                                \n                                {/* <span className={this.props.icon + \" \" + ButtonStyles.btnIcon}\n                            style={this.props.type === \"icon\" ? {display: 'block', height: '24px', width: '24px', paddingTop: '4px', fontSize: '16px'} : {display: 'none'}}/>*/}\n                            <span style={{padding: \"2px 0 0 8px\"}}>{text(\"label\", \"long\")}</span>\n                        </Button>\n// export const Pinned = () => (\n//   <Task task={{ ...taskData, state: 'TASK_PINNED' }} {...actionsData} />\n// );\n\n// export const Archived = () => <Task task={{ ...taskData, state: 'TASK_ARCHIVED' }} {...actionsData} />;"]},"metadata":{},"sourceType":"module"}