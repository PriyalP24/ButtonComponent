{"ast":null,"code":"var _jsxFileName = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.component.stories.js\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\nimport PropTypes from 'prop-types';\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    component: Button,\\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  // componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\nButton.propTypes = {\\\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\\\n};\\\\nButton.defaultProps = {\\\\n  status: 'Outlined',\\\\n}; \\\\n\\\\nstoriesOf('Button', module)\\\\n.addParameters({ component: Button })\\\\n.add('Long', () => <div>\\\\n              <Button \\\\n                disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n                handleClick={action('onClick')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n            </Button>\\\\n            </div>,\\\\n           )\\\\n// .add('Short', () =>  <Button \\\\n//                   disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                   type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                   handleClick={action('Short button clicked')}\\\\n//                   handleInputFocus={action('onFocus')}\\\\n//                   handleInputBlur={action('onBlur')}\\\\n//                   btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                   fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                   disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//               </Button>)        \\\\n\\\\n\\\\nexport const Default = () => (<Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'default')}  \\\\n                handleClick={action('onClick')} \\\\n                handleInputFocus={action('onFocus')} \\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}  \\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />)\\\\n             \\\\n                \\\\n\\\\n// export const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />\\\\n           \\\\n\\\\n// export const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />   \\\\n                        \\\\n\\\\n  \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":5,\\\"line\\\":29},\\\"endLoc\\\":{\\\"col\\\":18,\\\"line\\\":40},\\\"startBody\\\":{\\\"col\\\":13,\\\"line\\\":29},\\\"endBody\\\":{\\\"col\\\":18,\\\"line\\\":40}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    component: Button,\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\nstoriesOf('Button', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\\n.addParameters({ component: Button })\\n.add('Long', () => <div>\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'long')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n            </Button>\\n            </div>,\\n           )\\n// .add('Short', () =>  <Button \\n//                   disabled={boolean(\\\"Disabled\\\", false)}\\n//                   type={text(\\\"Type\\\", \\\"short\\\")}\\n//                   handleClick={action('Short button clicked')}\\n//                   handleInputFocus={action('onFocus')}\\n//                   handleInputBlur={action('onBlur')}\\n//                   btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                   fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                   disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//               </Button>)        \\n\\n\\nexport const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n                handleClick={action('onClick')} \\n                handleInputFocus={action('onFocus')} \\n                btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\n// export const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />\\n           \\n\\n// export const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />   \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"button--long\": {\n    \"startLoc\": {\n      \"col\": 5,\n      \"line\": 51\n    },\n    \"endLoc\": {\n      \"col\": 18,\n      \"line\": 62\n    },\n    \"startBody\": {\n      \"col\": 13,\n      \"line\": 51\n    },\n    \"endBody\": {\n      \"col\": 18,\n      \"line\": 62\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    component: Button,\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\nstoriesOf('Button', module)\\n.addParameters({ component: Button })\\n.add('Long', () => <div>\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'long')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n            </Button>\\n            </div>,\\n           )\\n// .add('Short', () =>  <Button \\n//                   disabled={boolean(\\\"Disabled\\\", false)}\\n//                   type={text(\\\"Type\\\", \\\"short\\\")}\\n//                   handleClick={action('Short button clicked')}\\n//                   handleInputFocus={action('onFocus')}\\n//                   handleInputBlur={action('onBlur')}\\n//                   btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                   fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                   disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//               </Button>)        \\n\\n\\nexport const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n                handleClick={action('onClick')} \\n                handleInputFocus={action('onFocus')} \\n                btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\n// export const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />\\n           \\n\\n// export const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />   \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"button--long\": {\n    \"startLoc\": {\n      \"col\": 5,\n      \"line\": 29\n    },\n    \"endLoc\": {\n      \"col\": 18,\n      \"line\": 40\n    },\n    \"startBody\": {\n      \"col\": 13,\n      \"line\": 29\n    },\n    \"endBody\": {\n      \"col\": 18,\n      \"line\": 40\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\nimport PropTypes from 'prop-types';\nexport default {\n  title: 'Button',\n  parameters: {\n    component: Button,\n    componentSubtitle: 'Documentation of the Button React component'\n  },\n  // componentSubtitle: 'Documentation of the Button React component',\n  decorators: [withKnobs],\n  excludeStories: /.*Data$/\n};\nButton.propTypes = {\n  status: PropTypes.oneOf(['Long', 'Short', 'alert', 'Outlined', 'Link', 'Delete', 'Line', 'Icon'])\n};\nButton.defaultProps = {\n  status: 'Outlined'\n};\nstoriesOf('Button', module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __ADDS_MAP__\n  }\n}).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__, __MAIN_FILE_LOCATION__, __MODULE_DEPENDENCIES__, __LOCAL_DEPENDENCIES__, __SOURCE_PREFIX__, __IDS_TO_FRAMEWORKS__)).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __ADDS_MAP__\n  }\n}).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__, __MAIN_FILE_LOCATION__, __MODULE_DEPENDENCIES__, __LOCAL_DEPENDENCIES__, __SOURCE_PREFIX__, __IDS_TO_FRAMEWORKS__)).addParameters({\n  component: Button\n}).add('Long', () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", 'long'),\n  handleClick: action('onClick'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", \"Long\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", false),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}))); // .add('Short', () =>  <Button \n//                   disabled={boolean(\"Disabled\", false)}\n//                   type={text(\"Type\", \"short\")}\n//                   handleClick={action('Short button clicked')}\n//                   handleInputFocus={action('onFocus')}\n//                   handleInputBlur={action('onBlur')}\n//                   btnText={text(\"label\",\"Short\")}\n//                   fullWidth={boolean(\"fullWidth\", false)}\n//                   disableRipple={boolean(\"disableRipple\", true)}>\n//               </Button>)        \n\nexport const Default = () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  type: text(\"Type\", 'default'),\n  handleClick: action('onClick'),\n  handleInputFocus: action('onFocus'),\n  btnText: text(\"label\", \"Default\"),\n  fullWidth: boolean(\"fullWidth\", false),\n  disableRipple: boolean(\"disableRipple\", false),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n});\nDefault.displayName = \"Default\";\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/js/components/button.component.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src/js/components/button.component.stories.js\"\n  };\n}","map":{"version":3,"sources":["/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.component.stories.js"],"names":["withSourceLoader","require","withSource","addSourceDecorator","addSource","__SOURCE_PREFIX__","__STORY__","__ADDS_MAP__","__MAIN_FILE_LOCATION__","__MODULE_DEPENDENCIES__","__LOCAL_DEPENDENCIES__","__IDS_TO_FRAMEWORKS__","React","storiesOf","action","Button","withKnobs","text","boolean","PropTypes","title","parameters","component","componentSubtitle","decorators","excludeStories","propTypes","status","oneOf","defaultProps","module","addParameters","storySource","source","locationsMap","addDecorator","add","Default"],"mappings":"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","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\nimport PropTypes from 'prop-types';\\\\n\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  parameters: {\\\\n    component: Button,\\\\n    componentSubtitle: 'Documentation of the Button React component',\\\\n  },\\\\n  // componentSubtitle: 'Documentation of the Button React component',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\nButton.propTypes = {\\\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\\\n};\\\\nButton.defaultProps = {\\\\n  status: 'Outlined',\\\\n}; \\\\n\\\\nstoriesOf('Button', module)\\\\n.addParameters({ component: Button })\\\\n.add('Long', () => <div>\\\\n              <Button \\\\n                disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n                type={text(\\\\\\\"Type\\\\\\\", 'long')}\\\\n                handleClick={action('onClick')}\\\\n                handleInputFocus={action('onFocus')}\\\\n                handleInputBlur={action('onBlur')}\\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)}>\\\\n            </Button>\\\\n            </div>,\\\\n           )\\\\n// .add('Short', () =>  <Button \\\\n//                   disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                   type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                   handleClick={action('Short button clicked')}\\\\n//                   handleInputFocus={action('onFocus')}\\\\n//                   handleInputBlur={action('onBlur')}\\\\n//                   btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                   fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                   disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//               </Button>)        \\\\n\\\\n\\\\nexport const Default = () => (<Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'default')}  \\\\n                handleClick={action('onClick')} \\\\n                handleInputFocus={action('onFocus')} \\\\n                btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Default\\\\\\\")}  \\\\n                fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n                disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />)\\\\n             \\\\n                \\\\n\\\\n// export const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Long\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} />\\\\n           \\\\n\\\\n// export const Short = () => <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                 type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />   \\\\n                        \\\\n\\\\n  \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Icon\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":5,\\\"line\\\":29},\\\"endLoc\\\":{\\\"col\\\":18,\\\"line\\\":40},\\\"startBody\\\":{\\\"col\\\":13,\\\"line\\\":29},\\\"endBody\\\":{\\\"col\\\":18,\\\"line\\\":40}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.component.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    component: Button,\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\nstoriesOf('Button', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\\n.addParameters({ component: Button })\\n.add('Long', () => <div>\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'long')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n            </Button>\\n            </div>,\\n           )\\n// .add('Short', () =>  <Button \\n//                   disabled={boolean(\\\"Disabled\\\", false)}\\n//                   type={text(\\\"Type\\\", \\\"short\\\")}\\n//                   handleClick={action('Short button clicked')}\\n//                   handleInputFocus={action('onFocus')}\\n//                   handleInputBlur={action('onBlur')}\\n//                   btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                   fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                   disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//               </Button>)        \\n\\n\\nexport const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n                handleClick={action('onClick')} \\n                handleInputFocus={action('onFocus')} \\n                btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\n// export const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />\\n           \\n\\n// export const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />   \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"button--long\":{\"startLoc\":{\"col\":5,\"line\":51},\"endLoc\":{\"col\":18,\"line\":62},\"startBody\":{\"col\":13,\"line\":51},\"endBody\":{\"col\":18,\"line\":62}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\nimport PropTypes from 'prop-types';\\n\\n\\nexport default {\\n  title: 'Button',\\n  parameters: {\\n    component: Button,\\n    componentSubtitle: 'Documentation of the Button React component',\\n  },\\n  // componentSubtitle: 'Documentation of the Button React component',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\nButton.propTypes = {\\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\\n};\\nButton.defaultProps = {\\n  status: 'Outlined',\\n}; \\n\\nstoriesOf('Button', module)\\n.addParameters({ component: Button })\\n.add('Long', () => <div>\\n              <Button \\n                disabled={boolean(\\\"Disabled\\\", false)}\\n                type={text(\\\"Type\\\", 'long')}\\n                handleClick={action('onClick')}\\n                handleInputFocus={action('onFocus')}\\n                handleInputBlur={action('onBlur')}\\n                btnText={text(\\\"label\\\",\\\"Long\\\")}\\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)}>\\n            </Button>\\n            </div>,\\n           )\\n// .add('Short', () =>  <Button \\n//                   disabled={boolean(\\\"Disabled\\\", false)}\\n//                   type={text(\\\"Type\\\", \\\"short\\\")}\\n//                   handleClick={action('Short button clicked')}\\n//                   handleInputFocus={action('onFocus')}\\n//                   handleInputBlur={action('onBlur')}\\n//                   btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                   fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                   disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//               </Button>)        \\n\\n\\nexport const Default = () => (<Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'default')}  \\n                handleClick={action('onClick')} \\n                handleInputFocus={action('onFocus')} \\n                btnText={text(\\\"label\\\",\\\"Default\\\")}  \\n                fullWidth={boolean(\\\"fullWidth\\\", false)}\\n                disableRipple={boolean(\\\"disableRipple\\\", false)} />)\\n             \\n                \\n\\n// export const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Long\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", false)} />\\n           \\n\\n// export const Short = () => <Button  disabled={boolean(\\\"Disabled\\\", false)}\\n//                 type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />   \\n                        \\n\\n  \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Icon\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"button--long\":{\"startLoc\":{\"col\":5,\"line\":29},\"endLoc\":{\"col\":18,\"line\":40},\"startBody\":{\"col\":13,\"line\":29},\"endBody\":{\"col\":18,\"line\":40}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/button.component.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\nimport PropTypes from 'prop-types';\n\n\nexport default {\n  title: 'Button',\n  parameters: {\n    component: Button,\n    componentSubtitle: 'Documentation of the Button React component',\n  },\n  // componentSubtitle: 'Documentation of the Button React component',\n  decorators: [withKnobs],\n  excludeStories: /.*Data$/,\n  \n};\nButton.propTypes = {\n  status: PropTypes.oneOf(['Long', 'Short', 'alert','Outlined','Link','Delete','Line','Icon']),\n};\nButton.defaultProps = {\n  status: 'Outlined',\n}; \n\nstoriesOf('Button', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n.addParameters({ component: Button })\n.add('Long', () => <div>\n              <Button \n                disabled={boolean(\"Disabled\", false)}\n                type={text(\"Type\", 'long')}\n                handleClick={action('onClick')}\n                handleInputFocus={action('onFocus')}\n                handleInputBlur={action('onBlur')}\n                btnText={text(\"label\",\"Long\")}\n                fullWidth={boolean(\"fullWidth\", false)}\n                disableRipple={boolean(\"disableRipple\", false)}>\n            </Button>\n            </div>,\n           )\n// .add('Short', () =>  <Button \n//                   disabled={boolean(\"Disabled\", false)}\n//                   type={text(\"Type\", \"short\")}\n//                   handleClick={action('Short button clicked')}\n//                   handleInputFocus={action('onFocus')}\n//                   handleInputBlur={action('onBlur')}\n//                   btnText={text(\"label\",\"Short\")}\n//                   fullWidth={boolean(\"fullWidth\", false)}\n//                   disableRipple={boolean(\"disableRipple\", true)}>\n//               </Button>)        \n\n\nexport const Default = () => (<Button disabled={boolean(\"Disabled\", false)} type={text(\"Type\", 'default')}  \n                handleClick={action('onClick')} \n                handleInputFocus={action('onFocus')} \n                btnText={text(\"label\",\"Default\")}  \n                fullWidth={boolean(\"fullWidth\", false)}\n                disableRipple={boolean(\"disableRipple\", false)} />)\n             \n                \n\n// export const Long = () => <Button disabled={boolean(\"Disabled\", false)} type={text(\"Type\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}\n//                 handleInputBlur={action('onBlur')}\n//                 btnText={text(\"label\",\"Long\")}\n//                 fullWidth={boolean(\"fullWidth\", false)}\n//                 disableRipple={boolean(\"disableRipple\", false)} />\n           \n\n// export const Short = () => <Button  disabled={boolean(\"Disabled\", false)}\n//                 type={text(\"Type\", \"short\")}\n//                 handleClick={action('Short button clicked')}\n//                 handleInputFocus={action('onFocus')}\n//                 handleInputBlur={action('onBlur')}\n//                 btnText={text(\"label\",\"Short\")}\n//                 fullWidth={boolean(\"fullWidth\", false)}\n//                 disableRipple={boolean(\"disableRipple\", true)} />   \n                        \n\n  \n\n// export const Alert = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"alert\")}\n//                             handleClick={action('Alert button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Alert\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n\n// export const outlined = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"outlined\")}\n//                             handleClick={action('outlined button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Outlined\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n\n// export const Link = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"link\")}\n//                             handleClick={action('Link button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Link\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n\n// export const Delete = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"delete\")}\n//                             handleClick={action('Delete button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Delete\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n                        \n// export const Line = () => <Button \n//                         disabled={boolean(\"Disabled\", false)}\n//                         type={text(\"Type\", \"line\")}\n//                         handleClick={action('Line button clicked')}\n//                         handleInputFocus={action('onFocus')}\n//                         handleInputBlur={action('onBlur')}\n//                         btnText={text(\"label\",\"Line\")}\n//                         fullWidth={boolean(\"fullWidth\", false)}\n//                         disableRipple={boolean(\"disableRipple\", true)}>\n//                     </Button>   \n\n// export const Icon = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"icon\")}\n//                             handleClick={action('Icon button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Icon\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>                      "]},"metadata":{},"sourceType":"module"}