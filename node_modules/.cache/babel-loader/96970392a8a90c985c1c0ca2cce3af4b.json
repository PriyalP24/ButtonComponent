{"ast":null,"code":"var _jsxFileName = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.components.stories.js\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\n\\\\nstoriesOf(\\\\\\\"Button\\\\\\\",module)\\\\n.add(\\\\\\\"Long\\\\\\\", () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"contained\\\\\\\")} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", true)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",'Long')}/>)\\\\n.addParameters({\\\\n  component:Button,\\\\n  componentSubtitle: 'Documentation of the Button React component',  \\\\n  docs: {\\\\n    // container: DocsContainer,\\\\n    page: DocsPage,\\\\n    // storyDescription:\\\\\\\"6 types of buttons are there!\\\\\\\"\\\\n  },\\\\n  options: {\\\\n    theme: themes.light,\\\\n  },\\\\n}\\\\n);\\\\n\\\\n// export const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"contained\\\\\\\")} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", true)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",'Long')}/>;\\\\n\\\\n// export const Short = () => (\\\\n//         <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"contained\\\\\\\")}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />\\\\n//                 ); \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"ðŸ˜Žtext\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":5,\\\"line\\\":15},\\\"endLoc\\\":{\\\"col\\\":355,\\\"line\\\":15},\\\"startBody\\\":{\\\"col\\\":13,\\\"line\\\":15},\\\"endBody\\\":{\\\"col\\\":355,\\\"line\\\":15}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.components.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\nexport default {\\n  title: 'Button',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n\\nstoriesOf(\\\"Button\\\",module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\\n.add(\\\"Long\\\", () => <Button disabled={boolean(\\\"Disabled\\\", false)} variant={text(\\\"variant\\\",\\\"contained\\\")} fullWidth={boolean(\\\"fullWidth\\\", true)} disableRipple={boolean(\\\"disableRipple\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",'Long')}/>)\\n.addParameters({\\n  component:Button,\\n  componentSubtitle: 'Documentation of the Button React component',  \\n  docs: {\\n    // container: DocsContainer,\\n    page: DocsPage,\\n    // storyDescription:\\\"6 types of buttons are there!\\\"\\n  },\\n  options: {\\n    theme: themes.light,\\n  },\\n}\\n);\\n\\n// export const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} variant={text(\\\"variant\\\",\\\"contained\\\")} fullWidth={boolean(\\\"fullWidth\\\", true)} disableRipple={boolean(\\\"disableRipple\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",'Long')}/>;\\n\\n// export const Short = () => (\\n//         <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 variant={text(\\\"variant\\\",\\\"contained\\\")}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />\\n//                 ); \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"ðŸ˜Žtext\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"button--long\": {\n    \"startLoc\": {\n      \"col\": 5,\n      \"line\": 37\n    },\n    \"endLoc\": {\n      \"col\": 355,\n      \"line\": 37\n    },\n    \"startBody\": {\n      \"col\": 13,\n      \"line\": 37\n    },\n    \"endBody\": {\n      \"col\": 355,\n      \"line\": 37\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/button.components.stories.js\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\nexport default {\\n  title: 'Button',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n\\nstoriesOf(\\\"Button\\\",module)\\n.add(\\\"Long\\\", () => <Button disabled={boolean(\\\"Disabled\\\", false)} variant={text(\\\"variant\\\",\\\"contained\\\")} fullWidth={boolean(\\\"fullWidth\\\", true)} disableRipple={boolean(\\\"disableRipple\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",'Long')}/>)\\n.addParameters({\\n  component:Button,\\n  componentSubtitle: 'Documentation of the Button React component',  \\n  docs: {\\n    // container: DocsContainer,\\n    page: DocsPage,\\n    // storyDescription:\\\"6 types of buttons are there!\\\"\\n  },\\n  options: {\\n    theme: themes.light,\\n  },\\n}\\n);\\n\\n// export const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} variant={text(\\\"variant\\\",\\\"contained\\\")} fullWidth={boolean(\\\"fullWidth\\\", true)} disableRipple={boolean(\\\"disableRipple\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",'Long')}/>;\\n\\n// export const Short = () => (\\n//         <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 variant={text(\\\"variant\\\",\\\"contained\\\")}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />\\n//                 ); \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"ðŸ˜Žtext\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"button--long\": {\n    \"startLoc\": {\n      \"col\": 5,\n      \"line\": 15\n    },\n    \"endLoc\": {\n      \"col\": 355,\n      \"line\": 15\n    },\n    \"startBody\": {\n      \"col\": 13,\n      \"line\": 15\n    },\n    \"endBody\": {\n      \"col\": 355,\n      \"line\": 15\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/button.components.stories.js\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\nexport default {\n  title: 'Button',\n  decorators: [withKnobs],\n  excludeStories: /.*Data$/\n};\nstoriesOf(\"Button\", module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __ADDS_MAP__\n  }\n}).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__, __MAIN_FILE_LOCATION__, __MODULE_DEPENDENCIES__, __LOCAL_DEPENDENCIES__, __SOURCE_PREFIX__, __IDS_TO_FRAMEWORKS__)).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __ADDS_MAP__\n  }\n}).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__, __MAIN_FILE_LOCATION__, __MODULE_DEPENDENCIES__, __LOCAL_DEPENDENCIES__, __SOURCE_PREFIX__, __IDS_TO_FRAMEWORKS__)).add(\"Long\", () => React.createElement(Button, {\n  disabled: boolean(\"Disabled\", false),\n  variant: text(\"variant\", \"contained\"),\n  fullWidth: boolean(\"fullWidth\", true),\n  disableRipple: boolean(\"disableRipple\", false),\n  type: text(\"Type\", 'long'),\n  handleClick: action('onClick'),\n  handleInputFocus: action('onFocus'),\n  handleInputBlur: action('onBlur'),\n  btnText: text(\"label\", 'Long'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n})).addParameters({\n  component: Button,\n  componentSubtitle: 'Documentation of the Button React component',\n  docs: {\n    // container: DocsContainer,\n    page: DocsPage // storyDescription:\"6 types of buttons are there!\"\n\n  },\n  options: {\n    theme: themes.light\n  }\n}); // export const Long = () => <Button disabled={boolean(\"Disabled\", false)} variant={text(\"variant\",\"contained\")} fullWidth={boolean(\"fullWidth\", true)} disableRipple={boolean(\"disableRipple\", false)} type={text(\"Type\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\"label\",'Long')}/>;\n// export const Short = () => (\n//         <Button  disabled={boolean(\"Disabled\", false)} type={text(\"Type\", \"short\")}\n//                 handleClick={action('Short button clicked')}\n//                 handleInputFocus={action('onFocus')}\n//                 handleInputBlur={action('onBlur')}\n//                 btnText={text(\"label\",\"Short\")}\n//                 variant={text(\"variant\",\"contained\")}\n//                 disableRipple={boolean(\"disableRipple\", true)} />\n//                 ); \n// export const Alert = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"alert\")}\n//                             handleClick={action('Alert button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Alert\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             variant={text(\"variant\",\"outlined\")}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n// export const outlined = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"outlined\")}\n//                             handleClick={action('outlined button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Outlined\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             variant={text(\"variant\",\"outlined\")}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n// export const Link = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"link\")}\n//                             handleClick={action('Link button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Link\")}\n//                             variant={text(\"variant\",\"outlined\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n// export const Delete = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"delete\")}\n//                             handleClick={action('Delete button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Delete\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             variant={text(\"variant\",\"outlined\")}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n// export const Line = () => <Button \n//                         disabled={boolean(\"Disabled\", false)}\n//                         type={text(\"Type\", \"line\")}\n//                         handleClick={action('Line button clicked')}\n//                         handleInputFocus={action('onFocus')}\n//                         handleInputBlur={action('onBlur')}\n//                         btnText={text(\"label\",\"Line\")}\n//                         fullWidth={boolean(\"fullWidth\", false)}\n//                         variant={text(\"variant\",\"outlined\")}\n//                         disableRipple={boolean(\"disableRipple\", true)}>\n//                     </Button>   \n// export const Icon = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"icon\")}\n//                             handleClick={action('Icon button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"ðŸ˜Žtext\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             variant={text(\"variant\",\"outlined\")}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>","map":{"version":3,"sources":["/home/mtech/priyal/projects/buttoncomponent/src/js/components/button.components.stories.js"],"names":["withSourceLoader","require","withSource","addSourceDecorator","addSource","__SOURCE_PREFIX__","__STORY__","__ADDS_MAP__","__MAIN_FILE_LOCATION__","__MODULE_DEPENDENCIES__","__LOCAL_DEPENDENCIES__","__IDS_TO_FRAMEWORKS__","React","storiesOf","action","Button","withKnobs","text","boolean","title","decorators","excludeStories","module","addParameters","storySource","source","locationsMap","addDecorator","add","component","componentSubtitle","docs","page","DocsPage","options","theme","themes","light"],"mappings":";;AACA;AACA;AACA;AACA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,kCAAD,CAAP,CAA4CC,UAAnE,C,CACA;;;AACA,IAAIC,kBAAkB,GAAGF,OAAO,CAAC,kCAAD,CAAP,CAA4CG,SAArE,C,CACA;;;AACA,IAAIC,iBAAiB,GAAG,+DAAxB,C,CACA;;AACA,IAAIC,SAAS,GAAG,ozbAAhB,C,CACA;;AACA,IAAIC,YAAY,GAAG;AAAC,kBAAe;AAAC,gBAAW;AAAC,aAAM,CAAP;AAAS,cAAO;AAAhB,KAAZ;AAAgC,cAAS;AAAC,aAAM,GAAP;AAAW,cAAO;AAAlB,KAAzC;AAA+D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA3E;AAAgG,eAAU;AAAC,aAAM,GAAP;AAAW,cAAO;AAAlB;AAA1G;AAAhB,CAAnB,C,CACA;;AACA,IAAIC,sBAAsB,GAAG,+BAA7B,C,CACA;;AACA,IAAIC,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAIC,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAIC,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAIX,gBAAgB,GAAGC,OAAO,CAAC,kCAAD,CAAP,CAA4CC,UAAnE,C,CACA;;;AACA,IAAIC,kBAAkB,GAAGF,OAAO,CAAC,kCAAD,CAAP,CAA4CG,SAArE,C,CACA;;;AACA,IAAIC,iBAAiB,GAAG,+DAAxB,C,CACA;;AACA,IAAIC,SAAS,GAAG,srMAAhB,C,CACA;;AACA,IAAIC,YAAY,GAAG;AAAC,kBAAe;AAAC,gBAAW;AAAC,aAAM,CAAP;AAAS,cAAO;AAAhB,KAAZ;AAAgC,cAAS;AAAC,aAAM,GAAP;AAAW,cAAO;AAAlB,KAAzC;AAA+D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA3E;AAAgG,eAAU;AAAC,aAAM,GAAP;AAAW,cAAO;AAAlB;AAA1G;AAAhB,CAAnB,C,CACA;;AACA,IAAIC,sBAAsB,GAAG,+BAA7B,C,CACA;;AACA,IAAIC,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAIC,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAIC,qBAAqB,GAAG,EAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAA1B,QAAyC,wBAAzC;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE,QADM;AAEbC,EAAAA,UAAU,EAAE,CAACJ,SAAD,CAFC;AAGbK,EAAAA,cAAc,EAAE;AAHH,CAAf;AAOAR,SAAS,CAAC,QAAD,EAAUS,MAAV,CAAT,CAA2BC,aAA3B,CAAyC;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAEnB,SAAV;AAAqBoB,IAAAA,YAAY,EAAEnB;AAAnC;AAAf,CAAzC,EAA6GoB,YAA7G,CAA0H3B,gBAAgB,CAACM,SAAD,EAAYC,YAAZ,EAAyBC,sBAAzB,EAAgDC,uBAAhD,EAAwEC,sBAAxE,EAA+FL,iBAA/F,EAAiHM,qBAAjH,CAA1I,EAAmRY,aAAnR,CAAiS;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAEnB,SAAV;AAAqBoB,IAAAA,YAAY,EAAEnB;AAAnC;AAAf,CAAjS,EAAqWoB,YAArW,CAAkX3B,gBAAgB,CAACM,SAAD,EAAYC,YAAZ,EAAyBC,sBAAzB,EAAgDC,uBAAhD,EAAwEC,sBAAxE,EAA+FL,iBAA/F,EAAiHM,qBAAjH,CAAlY,EACCiB,GADD,CACK,MADL,EACa,MAAM,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAEV,OAAO,CAAC,UAAD,EAAa,KAAb,CAAzB;AAA8C,EAAA,OAAO,EAAED,IAAI,CAAC,SAAD,EAAW,WAAX,CAA3D;AAAoF,EAAA,SAAS,EAAEC,OAAO,CAAC,WAAD,EAAc,IAAd,CAAtG;AAA2H,EAAA,aAAa,EAAEA,OAAO,CAAC,eAAD,EAAkB,KAAlB,CAAjJ;AAA2K,EAAA,IAAI,EAAED,IAAI,CAAC,MAAD,EAAS,MAAT,CAArL;AAAuM,EAAA,WAAW,EAAEH,MAAM,CAAC,SAAD,CAA1N;AAAuO,EAAA,gBAAgB,EAAEA,MAAM,CAAC,SAAD,CAA/P;AAA6Q,EAAA,eAAe,EAAEA,MAAM,CAAC,QAAD,CAApS;AAAgT,EAAA,OAAO,EAAEG,IAAI,CAAC,OAAD,EAAS,MAAT,CAA7T;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADnB,EAECM,aAFD,CAEe;AACbM,EAAAA,SAAS,EAACd,MADG;AAEbe,EAAAA,iBAAiB,EAAE,6CAFN;AAGbC,EAAAA,IAAI,EAAE;AACJ;AACAC,IAAAA,IAAI,EAAEC,QAFF,CAGJ;;AAHI,GAHO;AAQbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEC,MAAM,CAACC;AADP;AARI,CAFf,E,CAgBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/home/mtech/priyal/projects/buttoncomponent/src/js/components\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react';\\\\nimport { storiesOf } from '@storybook/react';\\\\nimport { action } from '@storybook/addon-actions';\\\\nimport Button from './button.component';\\\\nimport { withKnobs, text, boolean } from \\\\\\\"@storybook/addon-knobs\\\\\\\";\\\\n\\\\nexport default {\\\\n  title: 'Button',\\\\n  decorators: [withKnobs],\\\\n  excludeStories: /.*Data$/,\\\\n  \\\\n};\\\\n\\\\nstoriesOf(\\\\\\\"Button\\\\\\\",module)\\\\n.add(\\\\\\\"Long\\\\\\\", () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"contained\\\\\\\")} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", true)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",'Long')}/>)\\\\n.addParameters({\\\\n  component:Button,\\\\n  componentSubtitle: 'Documentation of the Button React component',  \\\\n  docs: {\\\\n    // container: DocsContainer,\\\\n    page: DocsPage,\\\\n    // storyDescription:\\\\\\\"6 types of buttons are there!\\\\\\\"\\\\n  },\\\\n  options: {\\\\n    theme: themes.light,\\\\n  },\\\\n}\\\\n);\\\\n\\\\n// export const Long = () => <Button disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"contained\\\\\\\")} fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", true)} disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\\\\\"label\\\\\\\",'Long')}/>;\\\\n\\\\n// export const Short = () => (\\\\n//         <Button  disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)} type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"short\\\\\\\")}\\\\n//                 handleClick={action('Short button clicked')}\\\\n//                 handleInputFocus={action('onFocus')}\\\\n//                 handleInputBlur={action('onBlur')}\\\\n//                 btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Short\\\\\\\")}\\\\n//                 variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"contained\\\\\\\")}\\\\n//                 disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)} />\\\\n//                 ); \\\\n\\\\n// export const Alert = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"alert\\\\\\\")}\\\\n//                             handleClick={action('Alert button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Alert\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const outlined = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"outlined\\\\\\\")}\\\\n//                             handleClick={action('outlined button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Link = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"link\\\\\\\")}\\\\n//                             handleClick={action('Link button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Link\\\\\\\")}\\\\n//                             variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n\\\\n// export const Delete = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"delete\\\\\\\")}\\\\n//                             handleClick={action('Delete button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Delete\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>\\\\n                        \\\\n// export const Line = () => <Button \\\\n//                         disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                         type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"line\\\\\\\")}\\\\n//                         handleClick={action('Line button clicked')}\\\\n//                         handleInputFocus={action('onFocus')}\\\\n//                         handleInputBlur={action('onBlur')}\\\\n//                         btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"Line\\\\\\\")}\\\\n//                         fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                         variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                         disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                     </Button>   \\\\n\\\\n// export const Icon = () => <Button \\\\n//                             disabled={boolean(\\\\\\\"Disabled\\\\\\\", false)}\\\\n//                             type={text(\\\\\\\"Type\\\\\\\", \\\\\\\"icon\\\\\\\")}\\\\n//                             handleClick={action('Icon button clicked')}\\\\n//                             handleInputFocus={action('onFocus')}\\\\n//                             handleInputBlur={action('onBlur')}\\\\n//                             btnText={text(\\\\\\\"label\\\\\\\",\\\\\\\"ðŸ˜Žtext\\\\\\\")}\\\\n//                             fullWidth={boolean(\\\\\\\"fullWidth\\\\\\\", false)}\\\\n//                             variant={text(\\\\\\\"variant\\\\\\\",\\\\\\\"outlined\\\\\\\")}\\\\n//                             disableRipple={boolean(\\\\\\\"disableRipple\\\\\\\", true)}>\\\\n//                         </Button>                      \\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {\\\"button--long\\\":{\\\"startLoc\\\":{\\\"col\\\":5,\\\"line\\\":15},\\\"endLoc\\\":{\\\"col\\\":355,\\\"line\\\":15},\\\"startBody\\\":{\\\"col\\\":13,\\\"line\\\":15},\\\"endBody\\\":{\\\"col\\\":355,\\\"line\\\":15}}};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/button.components.stories.js\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\nexport default {\\n  title: 'Button',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n\\nstoriesOf(\\\"Button\\\",module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\\n.add(\\\"Long\\\", () => <Button disabled={boolean(\\\"Disabled\\\", false)} variant={text(\\\"variant\\\",\\\"contained\\\")} fullWidth={boolean(\\\"fullWidth\\\", true)} disableRipple={boolean(\\\"disableRipple\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",'Long')}/>)\\n.addParameters({\\n  component:Button,\\n  componentSubtitle: 'Documentation of the Button React component',  \\n  docs: {\\n    // container: DocsContainer,\\n    page: DocsPage,\\n    // storyDescription:\\\"6 types of buttons are there!\\\"\\n  },\\n  options: {\\n    theme: themes.light,\\n  },\\n}\\n);\\n\\n// export const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} variant={text(\\\"variant\\\",\\\"contained\\\")} fullWidth={boolean(\\\"fullWidth\\\", true)} disableRipple={boolean(\\\"disableRipple\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",'Long')}/>;\\n\\n// export const Short = () => (\\n//         <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 variant={text(\\\"variant\\\",\\\"contained\\\")}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />\\n//                 ); \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"ðŸ˜Žtext\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"button--long\":{\"startLoc\":{\"col\":5,\"line\":37},\"endLoc\":{\"col\":355,\"line\":37},\"startBody\":{\"col\":13,\"line\":37},\"endBody\":{\"col\":355,\"line\":37}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/button.components.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/mtech/priyal/projects/buttoncomponent/src/js/components\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport Button from './button.component';\\nimport { withKnobs, text, boolean } from \\\"@storybook/addon-knobs\\\";\\n\\nexport default {\\n  title: 'Button',\\n  decorators: [withKnobs],\\n  excludeStories: /.*Data$/,\\n  \\n};\\n\\nstoriesOf(\\\"Button\\\",module)\\n.add(\\\"Long\\\", () => <Button disabled={boolean(\\\"Disabled\\\", false)} variant={text(\\\"variant\\\",\\\"contained\\\")} fullWidth={boolean(\\\"fullWidth\\\", true)} disableRipple={boolean(\\\"disableRipple\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",'Long')}/>)\\n.addParameters({\\n  component:Button,\\n  componentSubtitle: 'Documentation of the Button React component',  \\n  docs: {\\n    // container: DocsContainer,\\n    page: DocsPage,\\n    // storyDescription:\\\"6 types of buttons are there!\\\"\\n  },\\n  options: {\\n    theme: themes.light,\\n  },\\n}\\n);\\n\\n// export const Long = () => <Button disabled={boolean(\\\"Disabled\\\", false)} variant={text(\\\"variant\\\",\\\"contained\\\")} fullWidth={boolean(\\\"fullWidth\\\", true)} disableRipple={boolean(\\\"disableRipple\\\", false)} type={text(\\\"Type\\\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\\\"label\\\",'Long')}/>;\\n\\n// export const Short = () => (\\n//         <Button  disabled={boolean(\\\"Disabled\\\", false)} type={text(\\\"Type\\\", \\\"short\\\")}\\n//                 handleClick={action('Short button clicked')}\\n//                 handleInputFocus={action('onFocus')}\\n//                 handleInputBlur={action('onBlur')}\\n//                 btnText={text(\\\"label\\\",\\\"Short\\\")}\\n//                 variant={text(\\\"variant\\\",\\\"contained\\\")}\\n//                 disableRipple={boolean(\\\"disableRipple\\\", true)} />\\n//                 ); \\n\\n// export const Alert = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"alert\\\")}\\n//                             handleClick={action('Alert button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Alert\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const outlined = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"outlined\\\")}\\n//                             handleClick={action('outlined button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Link = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"link\\\")}\\n//                             handleClick={action('Link button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Link\\\")}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n\\n// export const Delete = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"delete\\\")}\\n//                             handleClick={action('Delete button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"Delete\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>\\n                        \\n// export const Line = () => <Button \\n//                         disabled={boolean(\\\"Disabled\\\", false)}\\n//                         type={text(\\\"Type\\\", \\\"line\\\")}\\n//                         handleClick={action('Line button clicked')}\\n//                         handleInputFocus={action('onFocus')}\\n//                         handleInputBlur={action('onBlur')}\\n//                         btnText={text(\\\"label\\\",\\\"Line\\\")}\\n//                         fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                         variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                         disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                     </Button>   \\n\\n// export const Icon = () => <Button \\n//                             disabled={boolean(\\\"Disabled\\\", false)}\\n//                             type={text(\\\"Type\\\", \\\"icon\\\")}\\n//                             handleClick={action('Icon button clicked')}\\n//                             handleInputFocus={action('onFocus')}\\n//                             handleInputBlur={action('onBlur')}\\n//                             btnText={text(\\\"label\\\",\\\"ðŸ˜Žtext\\\")}\\n//                             fullWidth={boolean(\\\"fullWidth\\\", false)}\\n//                             variant={text(\\\"variant\\\",\\\"outlined\\\")}\\n//                             disableRipple={boolean(\\\"disableRipple\\\", true)}>\\n//                         </Button>                      \";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"button--long\":{\"startLoc\":{\"col\":5,\"line\":15},\"endLoc\":{\"col\":355,\"line\":15},\"startBody\":{\"col\":13,\"line\":15},\"endBody\":{\"col\":355,\"line\":15}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/button.components.stories.js\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Button from './button.component';\nimport { withKnobs, text, boolean } from \"@storybook/addon-knobs\";\n\nexport default {\n  title: 'Button',\n  decorators: [withKnobs],\n  excludeStories: /.*Data$/,\n  \n};\n\nstoriesOf(\"Button\",module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__)).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n.add(\"Long\", () => <Button disabled={boolean(\"Disabled\", false)} variant={text(\"variant\",\"contained\")} fullWidth={boolean(\"fullWidth\", true)} disableRipple={boolean(\"disableRipple\", false)} type={text(\"Type\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\"label\",'Long')}/>)\n.addParameters({\n  component:Button,\n  componentSubtitle: 'Documentation of the Button React component',  \n  docs: {\n    // container: DocsContainer,\n    page: DocsPage,\n    // storyDescription:\"6 types of buttons are there!\"\n  },\n  options: {\n    theme: themes.light,\n  },\n}\n);\n\n// export const Long = () => <Button disabled={boolean(\"Disabled\", false)} variant={text(\"variant\",\"contained\")} fullWidth={boolean(\"fullWidth\", true)} disableRipple={boolean(\"disableRipple\", false)} type={text(\"Type\", 'long')} handleClick={action('onClick')} handleInputFocus={action('onFocus')}  handleInputBlur={action('onBlur')} btnText={text(\"label\",'Long')}/>;\n\n// export const Short = () => (\n//         <Button  disabled={boolean(\"Disabled\", false)} type={text(\"Type\", \"short\")}\n//                 handleClick={action('Short button clicked')}\n//                 handleInputFocus={action('onFocus')}\n//                 handleInputBlur={action('onBlur')}\n//                 btnText={text(\"label\",\"Short\")}\n//                 variant={text(\"variant\",\"contained\")}\n//                 disableRipple={boolean(\"disableRipple\", true)} />\n//                 ); \n\n// export const Alert = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"alert\")}\n//                             handleClick={action('Alert button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Alert\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             variant={text(\"variant\",\"outlined\")}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n\n// export const outlined = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"outlined\")}\n//                             handleClick={action('outlined button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Outlined\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             variant={text(\"variant\",\"outlined\")}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n\n// export const Link = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"link\")}\n//                             handleClick={action('Link button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Link\")}\n//                             variant={text(\"variant\",\"outlined\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n\n// export const Delete = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"delete\")}\n//                             handleClick={action('Delete button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"Delete\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             variant={text(\"variant\",\"outlined\")}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>\n                        \n// export const Line = () => <Button \n//                         disabled={boolean(\"Disabled\", false)}\n//                         type={text(\"Type\", \"line\")}\n//                         handleClick={action('Line button clicked')}\n//                         handleInputFocus={action('onFocus')}\n//                         handleInputBlur={action('onBlur')}\n//                         btnText={text(\"label\",\"Line\")}\n//                         fullWidth={boolean(\"fullWidth\", false)}\n//                         variant={text(\"variant\",\"outlined\")}\n//                         disableRipple={boolean(\"disableRipple\", true)}>\n//                     </Button>   \n\n// export const Icon = () => <Button \n//                             disabled={boolean(\"Disabled\", false)}\n//                             type={text(\"Type\", \"icon\")}\n//                             handleClick={action('Icon button clicked')}\n//                             handleInputFocus={action('onFocus')}\n//                             handleInputBlur={action('onBlur')}\n//                             btnText={text(\"label\",\"ðŸ˜Žtext\")}\n//                             fullWidth={boolean(\"fullWidth\", false)}\n//                             variant={text(\"variant\",\"outlined\")}\n//                             disableRipple={boolean(\"disableRipple\", true)}>\n//                         </Button>                      "]},"metadata":{},"sourceType":"module"}