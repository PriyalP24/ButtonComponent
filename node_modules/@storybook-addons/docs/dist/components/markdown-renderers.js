"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var code_highlighter_1 = require("./code-highlighter");
var example_1 = require("./example");
var STORY_REGEXP = /{{%story::(.+.)%}}/;
exports.markdownRenderers = {
    code: code_highlighter_1.CodeHighlighter,
    paragraph: function (_a) {
        var children = _a.children;
        var value = children[0].props.value;
        if (value !== undefined) {
            var content = value.match(STORY_REGEXP);
            if (content !== null) {
                // TODO: Use one map instead two.
                var examples = content[1]
                    .split(/\|/)
                    .map(function (chunk) {
                    var splittedChunk = chunk.split(/:/);
                    return splittedChunk.length === 1 ? __spread(['Unknown'], splittedChunk) : splittedChunk;
                })
                    .map(function (_a) {
                    var _b = __read(_a, 2), platform = _b[0], storyId = _b[1];
                    return ({ platform: platform, storyId: storyId });
                });
                return react_1.default.createElement(example_1.Example, { examples: examples });
            }
        }
        return react_1.default.createElement("p", null, children);
    },
};
