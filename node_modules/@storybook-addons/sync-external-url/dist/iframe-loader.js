"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var query_string_1 = __importDefault(require("query-string"));
var constants_1 = require("./constants");
exports.IframeLoader = function (_a) {
    var _b = _a.queryPrefix, queryPrefix = _b === void 0 ? 'path' : _b, src = _a.src, props = __rest(_a, ["queryPrefix", "src"]);
    var source = react_1.useMemo(function () {
        var queryData = query_string_1.default.parse(window.location.search);
        var urlData = query_string_1.default.parseUrl(src);
        var query = query_string_1.default.stringify(__assign({}, urlData.query, { path: queryData[queryPrefix] || urlData.query.path }));
        return urlData.url + "?" + query;
    }, [queryPrefix, src]);
    var onLoad = react_1.useCallback(function () {
        window.addEventListener('message', function (message) {
            if (message.data === '') {
                return;
            }
            var data = JSON.parse(message.data);
            if (data.method === constants_1.UPDATE) {
                var urlData = query_string_1.default.parseUrl(window.location.href);
                urlData.query[queryPrefix] = data.payload.path;
                var nextQuery = query_string_1.default.stringify(urlData.query);
                var nextUrl = urlData.url + "?" + nextQuery;
                window.history.replaceState(null, '', nextUrl);
            }
        });
    }, [queryPrefix]);
    // eslint-disable-next-line jsx-a11y/iframe-has-title
    return react_1.default.createElement("iframe", __assign({}, props, { src: source, onLoad: onLoad }));
};
